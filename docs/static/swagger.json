{"swagger":"2.0","info":{"description":"Chain github.com/goatnetwork/goat REST API","title":"HTTP API Console","contact":{"name":"github.com/goatnetwork/goat"},"version":"0.0.1"},"paths":{"/goatnetwork/goat/bitcoin/v1/blockTip":{"get":{"summary":"BlockTip queries current the latest confirmed bitcoin height by relayer","operationId":"BlockTip","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"height":{"type":"string","format":"uint64"},"hash":{"type":"string"}},"title":"QueryBlockTipResponse"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}},"/goatnetwork/goat/bitcoin/v1/depositAddress":{"get":{"summary":"DepositAddress queries current address for deposit","operationId":"DepositAddress","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"network_name":{"type":"string"},"address":{"type":"string"},"public_key":{"type":"object","properties":{"secp256k1":{"type":"string","format":"byte"},"schnorr":{"type":"string","format":"byte"}},"title":"PublicKey defines the keys available for use with relayer"},"op_return_script":{"type":"string","format":"byte"}},"title":"QueryDepositAddressResponse is response type for the Query/DepositAddress RPC\nmethod"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"parameters":[{"name":"version","in":"query","required":false,"type":"integer","format":"int64"},{"name":"evm_address","description":"evm_address is an eth address to deposit","in":"query","required":false,"type":"string"}],"tags":["Query"]}},"/goatnetwork/goat/bitcoin/v1/hasDeposited":{"get":{"summary":"HasDeposited checks if a deposit transaction is confirmed on chain","operationId":"HasDeposited","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"yes":{"type":"boolean"}},"title":"QueryHasDepositedResponse"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"parameters":[{"name":"txid","description":"big endian encoded txid","in":"query","required":false,"type":"string"},{"name":"txout","in":"query","required":false,"type":"integer","format":"int64"}],"tags":["Query"]}},"/goatnetwork/goat/bitcoin/v1/params":{"get":{"summary":"Params queries the parameters of the module.","operationId":"BitcoinParams","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"chain_config":{"type":"object","properties":{"network_name":{"type":"string"},"pubkey_hash_addr_prefix":{"type":"integer","format":"int64"},"script_hash_addr_prefix":{"type":"integer","format":"int64"},"bech32_hrp":{"type":"string"}},"title":"ChainConfig"},"confirmation_number":{"type":"integer","format":"int64","title":"A block has the confirmation number should be considered as a finalized\nblock, and it's very hard to be rollbacked Using 6 is recommended for the\nbitcoin mainnet and you can use 1 on the regtest/devnet"},"min_deposit_amount":{"type":"string","format":"uint64"},"deposit_magic_prefix":{"type":"string","format":"byte"}}}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}},"/goatnetwork/goat/bitcoin/v1/pubkey":{"get":{"summary":"Pubkeys queries current public key for deposit","operationId":"Pubkey","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"public_key":{"type":"object","properties":{"secp256k1":{"type":"string","format":"byte"},"schnorr":{"type":"string","format":"byte"}},"title":"PublicKey defines the keys available for use with relayer"}},"title":"QueryPubkeyResponse is response type for the Query/Pubkey RPC method"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}},"/goatnetwork/goat/bitcoin/v1/withdrawal":{"get":{"summary":"Withdrawal queries all current public keys","operationId":"Withdrawal","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"withdrawal":{"type":"object","properties":{"address":{"type":"string"},"request_amount":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"},"output_script":{"type":"string","format":"byte","title":"the expected output script\nwe need to check if the withdrawal address is valid in advance\nso we don't have to calculate it again in the withdrawal proposal"},"status":{"type":"string","enum":["WITHDRAWAL_STATUS_UNSPECIFIED","WITHDRAWAL_STATUS_PENDING","WITHDRAWAL_STATUS_PROCESSING","WITHDRAWAL_STATUS_CANCELING","WITHDRAWAL_STATUS_CANCELED","WITHDRAWAL_STATUS_PAID"],"default":"WITHDRAWAL_STATUS_UNSPECIFIED","description":"WithdrawalStatus is the status of a withdrawal.\n\n - WITHDRAWAL_STATUS_UNSPECIFIED: WITHDRAWAL_STATUS_UNSPECIFIED defines an invalid status.\n - WITHDRAWAL_STATUS_PENDING: WITHDRAWAL_STATUS_PENDING\n - WITHDRAWAL_STATUS_PROCESSING: WITHDRAWAL_STATUS_PROCESSING\n - WITHDRAWAL_STATUS_CANCELING: WITHDRAWAL_STATUS_CANCELING\n - WITHDRAWAL_STATUS_CANCELED: WITHDRAWAL_STATUS_CANCELED\n - WITHDRAWAL_STATUS_PAID: WITHDRAWAL_STATUS_PAID"},"receipt":{"type":"object","properties":{"txid":{"type":"string","format":"byte"},"txout":{"type":"integer","format":"int64"},"amount":{"type":"string","format":"uint64"}},"title":"WithdrawalReceipt"}},"title":"Withdrawal"}},"title":"QueryWithdrawalResponse"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"parameters":[{"name":"id","in":"query","required":false,"type":"string","format":"uint64"}],"tags":["Query"]}},"/goatnetwork/goat/goat/v1/ethblock":{"get":{"summary":"EthBlock","operationId":"EthBlock","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"block":{"type":"object","properties":{"parent_hash":{"type":"string","format":"byte"},"fee_recipient":{"type":"string","format":"byte"},"state_root":{"type":"string","format":"byte"},"receipts_root":{"type":"string","format":"byte"},"logs_bloom":{"type":"string","format":"byte"},"prev_randao":{"type":"string","format":"byte"},"block_number":{"type":"string","format":"uint64"},"gas_limit":{"type":"string","format":"uint64"},"gas_used":{"type":"string","format":"uint64"},"timestamp":{"type":"string","format":"uint64"},"extra_data":{"type":"string","format":"byte"},"base_fee_per_gas":{"type":"string","format":"byte"},"block_hash":{"type":"string","format":"byte"},"transactions":{"type":"array","items":{"type":"string","format":"byte"}},"beacon_root":{"type":"string","format":"byte"},"blob_gas_used":{"type":"string","format":"uint64"},"excess_blob_gas":{"type":"string","format":"uint64"},"gas_revenue":{"type":"object","properties":{"amount":{"type":"string"}},"title":"GasRevenueReq"},"add_voter_req":{"type":"array","items":{"type":"object","properties":{"voter":{"type":"string","format":"byte"},"pubkey_hash":{"type":"string","format":"byte"}},"title":"AddVoterReq"}},"rm_voter_req":{"type":"array","items":{"type":"object","properties":{"voter":{"type":"string","format":"byte"}},"title":"RemoveVoterReq"}},"withdrawal_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"amount":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"},"address":{"type":"string"}},"title":"WithdrawalReq"}},"rbf_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"}},"title":"ReplaceByFeeReq"}},"cancel1_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"}},"title":"Cancel1Req"}}},"title":"ExecutionPayload"}},"description":"QueryEthBlockResponse is response type for the Query/EthBlock RPC method."}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}},"/goatnetwork/goat/relayer/v1/params":{"get":{"summary":"Parameters queries the parameters of the module.","operationId":"RelayerParams","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"electing_period":{"type":"string"},"accept_proposer_timeout":{"type":"string","title":"accept_proposer_timeout, set it to zero to skip the check"}}}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}},"/goatnetwork/goat/relayer/v1/pubkeys":{"get":{"summary":"Pubkeys queries all current public keys","operationId":"Pubkeys","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"public_keys":{"type":"array","items":{"type":"object","properties":{"secp256k1":{"type":"string","format":"byte"},"schnorr":{"type":"string","format":"byte"}},"title":"PublicKey defines the keys available for use with relayer"}}},"title":"QueryPubkeysResponse is response type for the Query/Pubkeys RPC method"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}},"/goatnetwork/goat/relayer/v1/relayer":{"get":{"summary":"Relayer queries relayer state","operationId":"Relayer","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"relayer":{"type":"object","properties":{"epoch":{"type":"string","format":"uint64","title":"the epoch number, increasing every election"},"proposer":{"type":"string"},"voters":{"type":"array","items":{"type":"string"}},"last_elected":{"type":"string","format":"date-time"},"proposer_accepted":{"type":"boolean","title":"proposer_accepted defined proposer has accepted the election result"}},"title":"Relayer represents the current relayer group state"},"sequence":{"type":"string","format":"uint64"}},"title":"QueryRelayerResponse is response type for the Query/Voters RPC method"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}},"/goatnetwork/goat/relayer/v1/voters":{"get":{"summary":"Voters queries all current voter list","operationId":"Voters","responses":{"200":{"description":"A successful response.","schema":{"type":"object","properties":{"voters":{"type":"object","additionalProperties":{"type":"object","properties":{"vote_key":{"type":"string","format":"byte","title":"vote key is the bls12-381 G2 compressed pubkey(96 bytes)\nthe key is a sha256 hash if the voter is pending to join the relayer\nnetwork"},"status":{"title":"status represents the current voter status","type":"string","enum":["VOTER_STATUS_UNSPECIFIED","VOTER_STATUS_PENDING","VOTER_STATUS_ON_BOARDING","VOTER_STATUS_OFF_BOARDING","VOTER_STATUS_ACTIVATED"],"default":"VOTER_STATUS_UNSPECIFIED","description":"VoterStatus is the status of a voter.\n\n - VOTER_STATUS_UNSPECIFIED: VOTER_STATUS_UNSPECIFIED defines an invalid status.\n - VOTER_STATUS_PENDING: VOTER_STATUS_PENDING defines a pending voter which was added on the chain\nhe still needs to send online proof to proposer to prove readiness and\nownership of public keys\n - VOTER_STATUS_ON_BOARDING: VOTER_STATUS_ON_BOARDING defines a voter that is approved from current\nproposer the voter will be added to voter list in the next election\n - VOTER_STATUS_OFF_BOARDING: VOTER_STATUS_OFF_BOARDING defines a voter that is removing from relayer\ngroup the voter will be removed from **chain state db** in the next\nelection\n - VOTER_STATUS_ACTIVATED: VOTER_STATUS_ACTIVATED defines a voter that is working."},"height":{"type":"string","format":"uint64","title":"height represents the block number of conensus layer when voter is approved\nto join on execution layer"}},"title":"Voter the relayer voter"}}},"title":"QueryVotersRequest is response type for the Query/Voters RPC method"}},"default":{"description":"An unexpected error response.","schema":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}}}},"tags":["Query"]}}},"definitions":{"goat.bitcoin.v1.ChainConfig":{"type":"object","properties":{"network_name":{"type":"string"},"pubkey_hash_addr_prefix":{"type":"integer","format":"int64"},"script_hash_addr_prefix":{"type":"integer","format":"int64"},"bech32_hrp":{"type":"string"}},"title":"ChainConfig"},"goat.bitcoin.v1.Params":{"type":"object","properties":{"chain_config":{"type":"object","properties":{"network_name":{"type":"string"},"pubkey_hash_addr_prefix":{"type":"integer","format":"int64"},"script_hash_addr_prefix":{"type":"integer","format":"int64"},"bech32_hrp":{"type":"string"}},"title":"ChainConfig"},"confirmation_number":{"type":"integer","format":"int64","title":"A block has the confirmation number should be considered as a finalized\nblock, and it's very hard to be rollbacked Using 6 is recommended for the\nbitcoin mainnet and you can use 1 on the regtest/devnet"},"min_deposit_amount":{"type":"string","format":"uint64"},"deposit_magic_prefix":{"type":"string","format":"byte"}},"description":"Params defines the parameters for the module."},"goat.bitcoin.v1.QueryBlockTipResponse":{"type":"object","properties":{"height":{"type":"string","format":"uint64"},"hash":{"type":"string"}},"title":"QueryBlockTipResponse"},"goat.bitcoin.v1.QueryDepositAddressResponse":{"type":"object","properties":{"network_name":{"type":"string"},"address":{"type":"string"},"public_key":{"type":"object","properties":{"secp256k1":{"type":"string","format":"byte"},"schnorr":{"type":"string","format":"byte"}},"title":"PublicKey defines the keys available for use with relayer"},"op_return_script":{"type":"string","format":"byte"}},"title":"QueryDepositAddressResponse is response type for the Query/DepositAddress RPC\nmethod"},"goat.bitcoin.v1.QueryHasDepositedResponse":{"type":"object","properties":{"yes":{"type":"boolean"}},"title":"QueryHasDepositedResponse"},"goat.bitcoin.v1.QueryParamsResponse":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"chain_config":{"type":"object","properties":{"network_name":{"type":"string"},"pubkey_hash_addr_prefix":{"type":"integer","format":"int64"},"script_hash_addr_prefix":{"type":"integer","format":"int64"},"bech32_hrp":{"type":"string"}},"title":"ChainConfig"},"confirmation_number":{"type":"integer","format":"int64","title":"A block has the confirmation number should be considered as a finalized\nblock, and it's very hard to be rollbacked Using 6 is recommended for the\nbitcoin mainnet and you can use 1 on the regtest/devnet"},"min_deposit_amount":{"type":"string","format":"uint64"},"deposit_magic_prefix":{"type":"string","format":"byte"}}}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."},"goat.bitcoin.v1.QueryPubkeyResponse":{"type":"object","properties":{"public_key":{"type":"object","properties":{"secp256k1":{"type":"string","format":"byte"},"schnorr":{"type":"string","format":"byte"}},"title":"PublicKey defines the keys available for use with relayer"}},"title":"QueryPubkeyResponse is response type for the Query/Pubkey RPC method"},"goat.bitcoin.v1.QueryWithdrawalResponse":{"type":"object","properties":{"withdrawal":{"type":"object","properties":{"address":{"type":"string"},"request_amount":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"},"output_script":{"type":"string","format":"byte","title":"the expected output script\nwe need to check if the withdrawal address is valid in advance\nso we don't have to calculate it again in the withdrawal proposal"},"status":{"type":"string","enum":["WITHDRAWAL_STATUS_UNSPECIFIED","WITHDRAWAL_STATUS_PENDING","WITHDRAWAL_STATUS_PROCESSING","WITHDRAWAL_STATUS_CANCELING","WITHDRAWAL_STATUS_CANCELED","WITHDRAWAL_STATUS_PAID"],"default":"WITHDRAWAL_STATUS_UNSPECIFIED","description":"WithdrawalStatus is the status of a withdrawal.\n\n - WITHDRAWAL_STATUS_UNSPECIFIED: WITHDRAWAL_STATUS_UNSPECIFIED defines an invalid status.\n - WITHDRAWAL_STATUS_PENDING: WITHDRAWAL_STATUS_PENDING\n - WITHDRAWAL_STATUS_PROCESSING: WITHDRAWAL_STATUS_PROCESSING\n - WITHDRAWAL_STATUS_CANCELING: WITHDRAWAL_STATUS_CANCELING\n - WITHDRAWAL_STATUS_CANCELED: WITHDRAWAL_STATUS_CANCELED\n - WITHDRAWAL_STATUS_PAID: WITHDRAWAL_STATUS_PAID"},"receipt":{"type":"object","properties":{"txid":{"type":"string","format":"byte"},"txout":{"type":"integer","format":"int64"},"amount":{"type":"string","format":"uint64"}},"title":"WithdrawalReceipt"}},"title":"Withdrawal"}},"title":"QueryWithdrawalResponse"},"goat.bitcoin.v1.Withdrawal":{"type":"object","properties":{"address":{"type":"string"},"request_amount":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"},"output_script":{"type":"string","format":"byte","title":"the expected output script\nwe need to check if the withdrawal address is valid in advance\nso we don't have to calculate it again in the withdrawal proposal"},"status":{"type":"string","enum":["WITHDRAWAL_STATUS_UNSPECIFIED","WITHDRAWAL_STATUS_PENDING","WITHDRAWAL_STATUS_PROCESSING","WITHDRAWAL_STATUS_CANCELING","WITHDRAWAL_STATUS_CANCELED","WITHDRAWAL_STATUS_PAID"],"default":"WITHDRAWAL_STATUS_UNSPECIFIED","description":"WithdrawalStatus is the status of a withdrawal.\n\n - WITHDRAWAL_STATUS_UNSPECIFIED: WITHDRAWAL_STATUS_UNSPECIFIED defines an invalid status.\n - WITHDRAWAL_STATUS_PENDING: WITHDRAWAL_STATUS_PENDING\n - WITHDRAWAL_STATUS_PROCESSING: WITHDRAWAL_STATUS_PROCESSING\n - WITHDRAWAL_STATUS_CANCELING: WITHDRAWAL_STATUS_CANCELING\n - WITHDRAWAL_STATUS_CANCELED: WITHDRAWAL_STATUS_CANCELED\n - WITHDRAWAL_STATUS_PAID: WITHDRAWAL_STATUS_PAID"},"receipt":{"type":"object","properties":{"txid":{"type":"string","format":"byte"},"txout":{"type":"integer","format":"int64"},"amount":{"type":"string","format":"uint64"}},"title":"WithdrawalReceipt"}},"title":"Withdrawal"},"goat.bitcoin.v1.WithdrawalReceipt":{"type":"object","properties":{"txid":{"type":"string","format":"byte"},"txout":{"type":"integer","format":"int64"},"amount":{"type":"string","format":"uint64"}},"title":"WithdrawalReceipt"},"goat.bitcoin.v1.WithdrawalStatus":{"type":"string","enum":["WITHDRAWAL_STATUS_UNSPECIFIED","WITHDRAWAL_STATUS_PENDING","WITHDRAWAL_STATUS_PROCESSING","WITHDRAWAL_STATUS_CANCELING","WITHDRAWAL_STATUS_CANCELED","WITHDRAWAL_STATUS_PAID"],"default":"WITHDRAWAL_STATUS_UNSPECIFIED","description":"WithdrawalStatus is the status of a withdrawal.\n\n - WITHDRAWAL_STATUS_UNSPECIFIED: WITHDRAWAL_STATUS_UNSPECIFIED defines an invalid status.\n - WITHDRAWAL_STATUS_PENDING: WITHDRAWAL_STATUS_PENDING\n - WITHDRAWAL_STATUS_PROCESSING: WITHDRAWAL_STATUS_PROCESSING\n - WITHDRAWAL_STATUS_CANCELING: WITHDRAWAL_STATUS_CANCELING\n - WITHDRAWAL_STATUS_CANCELED: WITHDRAWAL_STATUS_CANCELED\n - WITHDRAWAL_STATUS_PAID: WITHDRAWAL_STATUS_PAID"},"goat.relayer.v1.PublicKey":{"type":"object","properties":{"secp256k1":{"type":"string","format":"byte"},"schnorr":{"type":"string","format":"byte"}},"title":"PublicKey defines the keys available for use with relayer"},"google.protobuf.Any":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}},"google.rpc.Status":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"message":{"type":"string"},"details":{"type":"array","items":{"type":"object","properties":{"@type":{"type":"string"}},"additionalProperties":{}}}}},"goat.goat.v1.AddVoterReq":{"type":"object","properties":{"voter":{"type":"string","format":"byte"},"pubkey_hash":{"type":"string","format":"byte"}},"title":"AddVoterReq"},"goat.goat.v1.Cancel1Req":{"type":"object","properties":{"id":{"type":"string","format":"uint64"}},"title":"Cancel1Req"},"goat.goat.v1.ExecutionPayload":{"type":"object","properties":{"parent_hash":{"type":"string","format":"byte"},"fee_recipient":{"type":"string","format":"byte"},"state_root":{"type":"string","format":"byte"},"receipts_root":{"type":"string","format":"byte"},"logs_bloom":{"type":"string","format":"byte"},"prev_randao":{"type":"string","format":"byte"},"block_number":{"type":"string","format":"uint64"},"gas_limit":{"type":"string","format":"uint64"},"gas_used":{"type":"string","format":"uint64"},"timestamp":{"type":"string","format":"uint64"},"extra_data":{"type":"string","format":"byte"},"base_fee_per_gas":{"type":"string","format":"byte"},"block_hash":{"type":"string","format":"byte"},"transactions":{"type":"array","items":{"type":"string","format":"byte"}},"beacon_root":{"type":"string","format":"byte"},"blob_gas_used":{"type":"string","format":"uint64"},"excess_blob_gas":{"type":"string","format":"uint64"},"gas_revenue":{"type":"object","properties":{"amount":{"type":"string"}},"title":"GasRevenueReq"},"add_voter_req":{"type":"array","items":{"type":"object","properties":{"voter":{"type":"string","format":"byte"},"pubkey_hash":{"type":"string","format":"byte"}},"title":"AddVoterReq"}},"rm_voter_req":{"type":"array","items":{"type":"object","properties":{"voter":{"type":"string","format":"byte"}},"title":"RemoveVoterReq"}},"withdrawal_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"amount":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"},"address":{"type":"string"}},"title":"WithdrawalReq"}},"rbf_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"}},"title":"ReplaceByFeeReq"}},"cancel1_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"}},"title":"Cancel1Req"}}},"title":"ExecutionPayload"},"goat.goat.v1.GasRevenueReq":{"type":"object","properties":{"amount":{"type":"string"}},"title":"GasRevenueReq"},"goat.goat.v1.QueryEthBlockResponse":{"type":"object","properties":{"block":{"type":"object","properties":{"parent_hash":{"type":"string","format":"byte"},"fee_recipient":{"type":"string","format":"byte"},"state_root":{"type":"string","format":"byte"},"receipts_root":{"type":"string","format":"byte"},"logs_bloom":{"type":"string","format":"byte"},"prev_randao":{"type":"string","format":"byte"},"block_number":{"type":"string","format":"uint64"},"gas_limit":{"type":"string","format":"uint64"},"gas_used":{"type":"string","format":"uint64"},"timestamp":{"type":"string","format":"uint64"},"extra_data":{"type":"string","format":"byte"},"base_fee_per_gas":{"type":"string","format":"byte"},"block_hash":{"type":"string","format":"byte"},"transactions":{"type":"array","items":{"type":"string","format":"byte"}},"beacon_root":{"type":"string","format":"byte"},"blob_gas_used":{"type":"string","format":"uint64"},"excess_blob_gas":{"type":"string","format":"uint64"},"gas_revenue":{"type":"object","properties":{"amount":{"type":"string"}},"title":"GasRevenueReq"},"add_voter_req":{"type":"array","items":{"type":"object","properties":{"voter":{"type":"string","format":"byte"},"pubkey_hash":{"type":"string","format":"byte"}},"title":"AddVoterReq"}},"rm_voter_req":{"type":"array","items":{"type":"object","properties":{"voter":{"type":"string","format":"byte"}},"title":"RemoveVoterReq"}},"withdrawal_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"amount":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"},"address":{"type":"string"}},"title":"WithdrawalReq"}},"rbf_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"}},"title":"ReplaceByFeeReq"}},"cancel1_req":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","format":"uint64"}},"title":"Cancel1Req"}}},"title":"ExecutionPayload"}},"description":"QueryEthBlockResponse is response type for the Query/EthBlock RPC method."},"goat.goat.v1.RemoveVoterReq":{"type":"object","properties":{"voter":{"type":"string","format":"byte"}},"title":"RemoveVoterReq"},"goat.goat.v1.ReplaceByFeeReq":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"}},"title":"ReplaceByFeeReq"},"goat.goat.v1.WithdrawalReq":{"type":"object","properties":{"id":{"type":"string","format":"uint64"},"amount":{"type":"string","format":"uint64"},"max_tx_price":{"type":"string","format":"uint64"},"address":{"type":"string"}},"title":"WithdrawalReq"},"goat.relayer.v1.Params":{"type":"object","properties":{"electing_period":{"type":"string"},"accept_proposer_timeout":{"type":"string","title":"accept_proposer_timeout, set it to zero to skip the check"}},"description":"Params defines the parameters for the module."},"goat.relayer.v1.QueryParamsResponse":{"type":"object","properties":{"params":{"description":"params holds all the parameters of this module.","type":"object","properties":{"electing_period":{"type":"string"},"accept_proposer_timeout":{"type":"string","title":"accept_proposer_timeout, set it to zero to skip the check"}}}},"description":"QueryParamsResponse is response type for the Query/Params RPC method."},"goat.relayer.v1.QueryPubkeysResponse":{"type":"object","properties":{"public_keys":{"type":"array","items":{"type":"object","properties":{"secp256k1":{"type":"string","format":"byte"},"schnorr":{"type":"string","format":"byte"}},"title":"PublicKey defines the keys available for use with relayer"}}},"title":"QueryPubkeysResponse is response type for the Query/Pubkeys RPC method"},"goat.relayer.v1.QueryRelayerResponse":{"type":"object","properties":{"relayer":{"type":"object","properties":{"epoch":{"type":"string","format":"uint64","title":"the epoch number, increasing every election"},"proposer":{"type":"string"},"voters":{"type":"array","items":{"type":"string"}},"last_elected":{"type":"string","format":"date-time"},"proposer_accepted":{"type":"boolean","title":"proposer_accepted defined proposer has accepted the election result"}},"title":"Relayer represents the current relayer group state"},"sequence":{"type":"string","format":"uint64"}},"title":"QueryRelayerResponse is response type for the Query/Voters RPC method"},"goat.relayer.v1.QueryVotersResponse":{"type":"object","properties":{"voters":{"type":"object","additionalProperties":{"type":"object","properties":{"vote_key":{"type":"string","format":"byte","title":"vote key is the bls12-381 G2 compressed pubkey(96 bytes)\nthe key is a sha256 hash if the voter is pending to join the relayer\nnetwork"},"status":{"title":"status represents the current voter status","type":"string","enum":["VOTER_STATUS_UNSPECIFIED","VOTER_STATUS_PENDING","VOTER_STATUS_ON_BOARDING","VOTER_STATUS_OFF_BOARDING","VOTER_STATUS_ACTIVATED"],"default":"VOTER_STATUS_UNSPECIFIED","description":"VoterStatus is the status of a voter.\n\n - VOTER_STATUS_UNSPECIFIED: VOTER_STATUS_UNSPECIFIED defines an invalid status.\n - VOTER_STATUS_PENDING: VOTER_STATUS_PENDING defines a pending voter which was added on the chain\nhe still needs to send online proof to proposer to prove readiness and\nownership of public keys\n - VOTER_STATUS_ON_BOARDING: VOTER_STATUS_ON_BOARDING defines a voter that is approved from current\nproposer the voter will be added to voter list in the next election\n - VOTER_STATUS_OFF_BOARDING: VOTER_STATUS_OFF_BOARDING defines a voter that is removing from relayer\ngroup the voter will be removed from **chain state db** in the next\nelection\n - VOTER_STATUS_ACTIVATED: VOTER_STATUS_ACTIVATED defines a voter that is working."},"height":{"type":"string","format":"uint64","title":"height represents the block number of conensus layer when voter is approved\nto join on execution layer"}},"title":"Voter the relayer voter"}}},"title":"QueryVotersRequest is response type for the Query/Voters RPC method"},"goat.relayer.v1.Relayer":{"type":"object","properties":{"epoch":{"type":"string","format":"uint64","title":"the epoch number, increasing every election"},"proposer":{"type":"string"},"voters":{"type":"array","items":{"type":"string"}},"last_elected":{"type":"string","format":"date-time"},"proposer_accepted":{"type":"boolean","title":"proposer_accepted defined proposer has accepted the election result"}},"title":"Relayer represents the current relayer group state"},"goat.relayer.v1.Voter":{"type":"object","properties":{"vote_key":{"type":"string","format":"byte","title":"vote key is the bls12-381 G2 compressed pubkey(96 bytes)\nthe key is a sha256 hash if the voter is pending to join the relayer\nnetwork"},"status":{"title":"status represents the current voter status","type":"string","enum":["VOTER_STATUS_UNSPECIFIED","VOTER_STATUS_PENDING","VOTER_STATUS_ON_BOARDING","VOTER_STATUS_OFF_BOARDING","VOTER_STATUS_ACTIVATED"],"default":"VOTER_STATUS_UNSPECIFIED","description":"VoterStatus is the status of a voter.\n\n - VOTER_STATUS_UNSPECIFIED: VOTER_STATUS_UNSPECIFIED defines an invalid status.\n - VOTER_STATUS_PENDING: VOTER_STATUS_PENDING defines a pending voter which was added on the chain\nhe still needs to send online proof to proposer to prove readiness and\nownership of public keys\n - VOTER_STATUS_ON_BOARDING: VOTER_STATUS_ON_BOARDING defines a voter that is approved from current\nproposer the voter will be added to voter list in the next election\n - VOTER_STATUS_OFF_BOARDING: VOTER_STATUS_OFF_BOARDING defines a voter that is removing from relayer\ngroup the voter will be removed from **chain state db** in the next\nelection\n - VOTER_STATUS_ACTIVATED: VOTER_STATUS_ACTIVATED defines a voter that is working."},"height":{"type":"string","format":"uint64","title":"height represents the block number of conensus layer when voter is approved\nto join on execution layer"}},"title":"Voter the relayer voter"},"goat.relayer.v1.VoterStatus":{"type":"string","enum":["VOTER_STATUS_UNSPECIFIED","VOTER_STATUS_PENDING","VOTER_STATUS_ON_BOARDING","VOTER_STATUS_OFF_BOARDING","VOTER_STATUS_ACTIVATED"],"default":"VOTER_STATUS_UNSPECIFIED","description":"VoterStatus is the status of a voter.\n\n - VOTER_STATUS_UNSPECIFIED: VOTER_STATUS_UNSPECIFIED defines an invalid status.\n - VOTER_STATUS_PENDING: VOTER_STATUS_PENDING defines a pending voter which was added on the chain\nhe still needs to send online proof to proposer to prove readiness and\nownership of public keys\n - VOTER_STATUS_ON_BOARDING: VOTER_STATUS_ON_BOARDING defines a voter that is approved from current\nproposer the voter will be added to voter list in the next election\n - VOTER_STATUS_OFF_BOARDING: VOTER_STATUS_OFF_BOARDING defines a voter that is removing from relayer\ngroup the voter will be removed from **chain state db** in the next\nelection\n - VOTER_STATUS_ACTIVATED: VOTER_STATUS_ACTIVATED defines a voter that is working."}}}
