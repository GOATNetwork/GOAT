// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package goatv1

import (
	_ "cosmossdk.io/api/amino"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_ExecutionPayload_14_list)(nil)

type _ExecutionPayload_14_list struct {
	list *[][]byte
}

func (x *_ExecutionPayload_14_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecutionPayload_14_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_ExecutionPayload_14_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ExecutionPayload_14_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecutionPayload_14_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ExecutionPayload at list field Transactions as it is not of Message kind"))
}

func (x *_ExecutionPayload_14_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ExecutionPayload_14_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_ExecutionPayload_14_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ExecutionPayload_19_list)(nil)

type _ExecutionPayload_19_list struct {
	list *[]*AddVoterReq
}

func (x *_ExecutionPayload_19_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecutionPayload_19_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ExecutionPayload_19_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddVoterReq)
	(*x.list)[i] = concreteValue
}

func (x *_ExecutionPayload_19_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*AddVoterReq)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecutionPayload_19_list) AppendMutable() protoreflect.Value {
	v := new(AddVoterReq)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_19_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ExecutionPayload_19_list) NewElement() protoreflect.Value {
	v := new(AddVoterReq)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_19_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ExecutionPayload_20_list)(nil)

type _ExecutionPayload_20_list struct {
	list *[]*RemoveVoterReq
}

func (x *_ExecutionPayload_20_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecutionPayload_20_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ExecutionPayload_20_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RemoveVoterReq)
	(*x.list)[i] = concreteValue
}

func (x *_ExecutionPayload_20_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*RemoveVoterReq)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecutionPayload_20_list) AppendMutable() protoreflect.Value {
	v := new(RemoveVoterReq)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_20_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ExecutionPayload_20_list) NewElement() protoreflect.Value {
	v := new(RemoveVoterReq)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_20_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ExecutionPayload_21_list)(nil)

type _ExecutionPayload_21_list struct {
	list *[]*WithdrawalReq
}

func (x *_ExecutionPayload_21_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecutionPayload_21_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ExecutionPayload_21_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithdrawalReq)
	(*x.list)[i] = concreteValue
}

func (x *_ExecutionPayload_21_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*WithdrawalReq)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecutionPayload_21_list) AppendMutable() protoreflect.Value {
	v := new(WithdrawalReq)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_21_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ExecutionPayload_21_list) NewElement() protoreflect.Value {
	v := new(WithdrawalReq)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_21_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ExecutionPayload_22_list)(nil)

type _ExecutionPayload_22_list struct {
	list *[]*ReplaceByFeeReq
}

func (x *_ExecutionPayload_22_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecutionPayload_22_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ExecutionPayload_22_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ReplaceByFeeReq)
	(*x.list)[i] = concreteValue
}

func (x *_ExecutionPayload_22_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*ReplaceByFeeReq)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecutionPayload_22_list) AppendMutable() protoreflect.Value {
	v := new(ReplaceByFeeReq)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_22_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ExecutionPayload_22_list) NewElement() protoreflect.Value {
	v := new(ReplaceByFeeReq)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_22_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ExecutionPayload_23_list)(nil)

type _ExecutionPayload_23_list struct {
	list *[]*Cancel1Req
}

func (x *_ExecutionPayload_23_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecutionPayload_23_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ExecutionPayload_23_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Cancel1Req)
	(*x.list)[i] = concreteValue
}

func (x *_ExecutionPayload_23_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Cancel1Req)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecutionPayload_23_list) AppendMutable() protoreflect.Value {
	v := new(Cancel1Req)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_23_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ExecutionPayload_23_list) NewElement() protoreflect.Value {
	v := new(Cancel1Req)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ExecutionPayload_23_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_ExecutionPayload_24_list)(nil)

type _ExecutionPayload_24_list struct {
	list *[][]byte
}

func (x *_ExecutionPayload_24_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ExecutionPayload_24_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfBytes((*x.list)[i])
}

func (x *_ExecutionPayload_24_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ExecutionPayload_24_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Bytes()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ExecutionPayload_24_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ExecutionPayload at list field Requests as it is not of Message kind"))
}

func (x *_ExecutionPayload_24_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ExecutionPayload_24_list) NewElement() protoreflect.Value {
	var v []byte
	return protoreflect.ValueOfBytes(v)
}

func (x *_ExecutionPayload_24_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ExecutionPayload                  protoreflect.MessageDescriptor
	fd_ExecutionPayload_parent_hash      protoreflect.FieldDescriptor
	fd_ExecutionPayload_fee_recipient    protoreflect.FieldDescriptor
	fd_ExecutionPayload_state_root       protoreflect.FieldDescriptor
	fd_ExecutionPayload_receipts_root    protoreflect.FieldDescriptor
	fd_ExecutionPayload_logs_bloom       protoreflect.FieldDescriptor
	fd_ExecutionPayload_prev_randao      protoreflect.FieldDescriptor
	fd_ExecutionPayload_block_number     protoreflect.FieldDescriptor
	fd_ExecutionPayload_gas_limit        protoreflect.FieldDescriptor
	fd_ExecutionPayload_gas_used         protoreflect.FieldDescriptor
	fd_ExecutionPayload_timestamp        protoreflect.FieldDescriptor
	fd_ExecutionPayload_extra_data       protoreflect.FieldDescriptor
	fd_ExecutionPayload_base_fee_per_gas protoreflect.FieldDescriptor
	fd_ExecutionPayload_block_hash       protoreflect.FieldDescriptor
	fd_ExecutionPayload_transactions     protoreflect.FieldDescriptor
	fd_ExecutionPayload_beacon_root      protoreflect.FieldDescriptor
	fd_ExecutionPayload_blob_gas_used    protoreflect.FieldDescriptor
	fd_ExecutionPayload_excess_blob_gas  protoreflect.FieldDescriptor
	fd_ExecutionPayload_gas_revenue      protoreflect.FieldDescriptor
	fd_ExecutionPayload_add_voter_req    protoreflect.FieldDescriptor
	fd_ExecutionPayload_rm_voter_req     protoreflect.FieldDescriptor
	fd_ExecutionPayload_withdrawal_req   protoreflect.FieldDescriptor
	fd_ExecutionPayload_rbf_req          protoreflect.FieldDescriptor
	fd_ExecutionPayload_cancel1_req      protoreflect.FieldDescriptor
	fd_ExecutionPayload_requests         protoreflect.FieldDescriptor
)

func init() {
	file_goat_goat_v1_goat_proto_init()
	md_ExecutionPayload = File_goat_goat_v1_goat_proto.Messages().ByName("ExecutionPayload")
	fd_ExecutionPayload_parent_hash = md_ExecutionPayload.Fields().ByName("parent_hash")
	fd_ExecutionPayload_fee_recipient = md_ExecutionPayload.Fields().ByName("fee_recipient")
	fd_ExecutionPayload_state_root = md_ExecutionPayload.Fields().ByName("state_root")
	fd_ExecutionPayload_receipts_root = md_ExecutionPayload.Fields().ByName("receipts_root")
	fd_ExecutionPayload_logs_bloom = md_ExecutionPayload.Fields().ByName("logs_bloom")
	fd_ExecutionPayload_prev_randao = md_ExecutionPayload.Fields().ByName("prev_randao")
	fd_ExecutionPayload_block_number = md_ExecutionPayload.Fields().ByName("block_number")
	fd_ExecutionPayload_gas_limit = md_ExecutionPayload.Fields().ByName("gas_limit")
	fd_ExecutionPayload_gas_used = md_ExecutionPayload.Fields().ByName("gas_used")
	fd_ExecutionPayload_timestamp = md_ExecutionPayload.Fields().ByName("timestamp")
	fd_ExecutionPayload_extra_data = md_ExecutionPayload.Fields().ByName("extra_data")
	fd_ExecutionPayload_base_fee_per_gas = md_ExecutionPayload.Fields().ByName("base_fee_per_gas")
	fd_ExecutionPayload_block_hash = md_ExecutionPayload.Fields().ByName("block_hash")
	fd_ExecutionPayload_transactions = md_ExecutionPayload.Fields().ByName("transactions")
	fd_ExecutionPayload_beacon_root = md_ExecutionPayload.Fields().ByName("beacon_root")
	fd_ExecutionPayload_blob_gas_used = md_ExecutionPayload.Fields().ByName("blob_gas_used")
	fd_ExecutionPayload_excess_blob_gas = md_ExecutionPayload.Fields().ByName("excess_blob_gas")
	fd_ExecutionPayload_gas_revenue = md_ExecutionPayload.Fields().ByName("gas_revenue")
	fd_ExecutionPayload_add_voter_req = md_ExecutionPayload.Fields().ByName("add_voter_req")
	fd_ExecutionPayload_rm_voter_req = md_ExecutionPayload.Fields().ByName("rm_voter_req")
	fd_ExecutionPayload_withdrawal_req = md_ExecutionPayload.Fields().ByName("withdrawal_req")
	fd_ExecutionPayload_rbf_req = md_ExecutionPayload.Fields().ByName("rbf_req")
	fd_ExecutionPayload_cancel1_req = md_ExecutionPayload.Fields().ByName("cancel1_req")
	fd_ExecutionPayload_requests = md_ExecutionPayload.Fields().ByName("requests")
}

var _ protoreflect.Message = (*fastReflection_ExecutionPayload)(nil)

type fastReflection_ExecutionPayload ExecutionPayload

func (x *ExecutionPayload) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ExecutionPayload)(x)
}

func (x *ExecutionPayload) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_goat_v1_goat_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ExecutionPayload_messageType fastReflection_ExecutionPayload_messageType
var _ protoreflect.MessageType = fastReflection_ExecutionPayload_messageType{}

type fastReflection_ExecutionPayload_messageType struct{}

func (x fastReflection_ExecutionPayload_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ExecutionPayload)(nil)
}
func (x fastReflection_ExecutionPayload_messageType) New() protoreflect.Message {
	return new(fastReflection_ExecutionPayload)
}
func (x fastReflection_ExecutionPayload_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ExecutionPayload
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ExecutionPayload) Descriptor() protoreflect.MessageDescriptor {
	return md_ExecutionPayload
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ExecutionPayload) Type() protoreflect.MessageType {
	return _fastReflection_ExecutionPayload_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ExecutionPayload) New() protoreflect.Message {
	return new(fastReflection_ExecutionPayload)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ExecutionPayload) Interface() protoreflect.ProtoMessage {
	return (*ExecutionPayload)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ExecutionPayload) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.ParentHash) != 0 {
		value := protoreflect.ValueOfBytes(x.ParentHash)
		if !f(fd_ExecutionPayload_parent_hash, value) {
			return
		}
	}
	if len(x.FeeRecipient) != 0 {
		value := protoreflect.ValueOfBytes(x.FeeRecipient)
		if !f(fd_ExecutionPayload_fee_recipient, value) {
			return
		}
	}
	if len(x.StateRoot) != 0 {
		value := protoreflect.ValueOfBytes(x.StateRoot)
		if !f(fd_ExecutionPayload_state_root, value) {
			return
		}
	}
	if len(x.ReceiptsRoot) != 0 {
		value := protoreflect.ValueOfBytes(x.ReceiptsRoot)
		if !f(fd_ExecutionPayload_receipts_root, value) {
			return
		}
	}
	if len(x.LogsBloom) != 0 {
		value := protoreflect.ValueOfBytes(x.LogsBloom)
		if !f(fd_ExecutionPayload_logs_bloom, value) {
			return
		}
	}
	if len(x.PrevRandao) != 0 {
		value := protoreflect.ValueOfBytes(x.PrevRandao)
		if !f(fd_ExecutionPayload_prev_randao, value) {
			return
		}
	}
	if x.BlockNumber != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlockNumber)
		if !f(fd_ExecutionPayload_block_number, value) {
			return
		}
	}
	if x.GasLimit != uint64(0) {
		value := protoreflect.ValueOfUint64(x.GasLimit)
		if !f(fd_ExecutionPayload_gas_limit, value) {
			return
		}
	}
	if x.GasUsed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.GasUsed)
		if !f(fd_ExecutionPayload_gas_used, value) {
			return
		}
	}
	if x.Timestamp != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Timestamp)
		if !f(fd_ExecutionPayload_timestamp, value) {
			return
		}
	}
	if len(x.ExtraData) != 0 {
		value := protoreflect.ValueOfBytes(x.ExtraData)
		if !f(fd_ExecutionPayload_extra_data, value) {
			return
		}
	}
	if len(x.BaseFeePerGas) != 0 {
		value := protoreflect.ValueOfBytes(x.BaseFeePerGas)
		if !f(fd_ExecutionPayload_base_fee_per_gas, value) {
			return
		}
	}
	if len(x.BlockHash) != 0 {
		value := protoreflect.ValueOfBytes(x.BlockHash)
		if !f(fd_ExecutionPayload_block_hash, value) {
			return
		}
	}
	if len(x.Transactions) != 0 {
		value := protoreflect.ValueOfList(&_ExecutionPayload_14_list{list: &x.Transactions})
		if !f(fd_ExecutionPayload_transactions, value) {
			return
		}
	}
	if len(x.BeaconRoot) != 0 {
		value := protoreflect.ValueOfBytes(x.BeaconRoot)
		if !f(fd_ExecutionPayload_beacon_root, value) {
			return
		}
	}
	if x.BlobGasUsed != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BlobGasUsed)
		if !f(fd_ExecutionPayload_blob_gas_used, value) {
			return
		}
	}
	if x.ExcessBlobGas != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ExcessBlobGas)
		if !f(fd_ExecutionPayload_excess_blob_gas, value) {
			return
		}
	}
	if x.GasRevenue != nil {
		value := protoreflect.ValueOfMessage(x.GasRevenue.ProtoReflect())
		if !f(fd_ExecutionPayload_gas_revenue, value) {
			return
		}
	}
	if len(x.AddVoterReq) != 0 {
		value := protoreflect.ValueOfList(&_ExecutionPayload_19_list{list: &x.AddVoterReq})
		if !f(fd_ExecutionPayload_add_voter_req, value) {
			return
		}
	}
	if len(x.RmVoterReq) != 0 {
		value := protoreflect.ValueOfList(&_ExecutionPayload_20_list{list: &x.RmVoterReq})
		if !f(fd_ExecutionPayload_rm_voter_req, value) {
			return
		}
	}
	if len(x.WithdrawalReq) != 0 {
		value := protoreflect.ValueOfList(&_ExecutionPayload_21_list{list: &x.WithdrawalReq})
		if !f(fd_ExecutionPayload_withdrawal_req, value) {
			return
		}
	}
	if len(x.RbfReq) != 0 {
		value := protoreflect.ValueOfList(&_ExecutionPayload_22_list{list: &x.RbfReq})
		if !f(fd_ExecutionPayload_rbf_req, value) {
			return
		}
	}
	if len(x.Cancel1Req) != 0 {
		value := protoreflect.ValueOfList(&_ExecutionPayload_23_list{list: &x.Cancel1Req})
		if !f(fd_ExecutionPayload_cancel1_req, value) {
			return
		}
	}
	if len(x.Requests) != 0 {
		value := protoreflect.ValueOfList(&_ExecutionPayload_24_list{list: &x.Requests})
		if !f(fd_ExecutionPayload_requests, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ExecutionPayload) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.goat.v1.ExecutionPayload.parent_hash":
		return len(x.ParentHash) != 0
	case "goat.goat.v1.ExecutionPayload.fee_recipient":
		return len(x.FeeRecipient) != 0
	case "goat.goat.v1.ExecutionPayload.state_root":
		return len(x.StateRoot) != 0
	case "goat.goat.v1.ExecutionPayload.receipts_root":
		return len(x.ReceiptsRoot) != 0
	case "goat.goat.v1.ExecutionPayload.logs_bloom":
		return len(x.LogsBloom) != 0
	case "goat.goat.v1.ExecutionPayload.prev_randao":
		return len(x.PrevRandao) != 0
	case "goat.goat.v1.ExecutionPayload.block_number":
		return x.BlockNumber != uint64(0)
	case "goat.goat.v1.ExecutionPayload.gas_limit":
		return x.GasLimit != uint64(0)
	case "goat.goat.v1.ExecutionPayload.gas_used":
		return x.GasUsed != uint64(0)
	case "goat.goat.v1.ExecutionPayload.timestamp":
		return x.Timestamp != uint64(0)
	case "goat.goat.v1.ExecutionPayload.extra_data":
		return len(x.ExtraData) != 0
	case "goat.goat.v1.ExecutionPayload.base_fee_per_gas":
		return len(x.BaseFeePerGas) != 0
	case "goat.goat.v1.ExecutionPayload.block_hash":
		return len(x.BlockHash) != 0
	case "goat.goat.v1.ExecutionPayload.transactions":
		return len(x.Transactions) != 0
	case "goat.goat.v1.ExecutionPayload.beacon_root":
		return len(x.BeaconRoot) != 0
	case "goat.goat.v1.ExecutionPayload.blob_gas_used":
		return x.BlobGasUsed != uint64(0)
	case "goat.goat.v1.ExecutionPayload.excess_blob_gas":
		return x.ExcessBlobGas != uint64(0)
	case "goat.goat.v1.ExecutionPayload.gas_revenue":
		return x.GasRevenue != nil
	case "goat.goat.v1.ExecutionPayload.add_voter_req":
		return len(x.AddVoterReq) != 0
	case "goat.goat.v1.ExecutionPayload.rm_voter_req":
		return len(x.RmVoterReq) != 0
	case "goat.goat.v1.ExecutionPayload.withdrawal_req":
		return len(x.WithdrawalReq) != 0
	case "goat.goat.v1.ExecutionPayload.rbf_req":
		return len(x.RbfReq) != 0
	case "goat.goat.v1.ExecutionPayload.cancel1_req":
		return len(x.Cancel1Req) != 0
	case "goat.goat.v1.ExecutionPayload.requests":
		return len(x.Requests) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ExecutionPayload"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ExecutionPayload does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecutionPayload) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.goat.v1.ExecutionPayload.parent_hash":
		x.ParentHash = nil
	case "goat.goat.v1.ExecutionPayload.fee_recipient":
		x.FeeRecipient = nil
	case "goat.goat.v1.ExecutionPayload.state_root":
		x.StateRoot = nil
	case "goat.goat.v1.ExecutionPayload.receipts_root":
		x.ReceiptsRoot = nil
	case "goat.goat.v1.ExecutionPayload.logs_bloom":
		x.LogsBloom = nil
	case "goat.goat.v1.ExecutionPayload.prev_randao":
		x.PrevRandao = nil
	case "goat.goat.v1.ExecutionPayload.block_number":
		x.BlockNumber = uint64(0)
	case "goat.goat.v1.ExecutionPayload.gas_limit":
		x.GasLimit = uint64(0)
	case "goat.goat.v1.ExecutionPayload.gas_used":
		x.GasUsed = uint64(0)
	case "goat.goat.v1.ExecutionPayload.timestamp":
		x.Timestamp = uint64(0)
	case "goat.goat.v1.ExecutionPayload.extra_data":
		x.ExtraData = nil
	case "goat.goat.v1.ExecutionPayload.base_fee_per_gas":
		x.BaseFeePerGas = nil
	case "goat.goat.v1.ExecutionPayload.block_hash":
		x.BlockHash = nil
	case "goat.goat.v1.ExecutionPayload.transactions":
		x.Transactions = nil
	case "goat.goat.v1.ExecutionPayload.beacon_root":
		x.BeaconRoot = nil
	case "goat.goat.v1.ExecutionPayload.blob_gas_used":
		x.BlobGasUsed = uint64(0)
	case "goat.goat.v1.ExecutionPayload.excess_blob_gas":
		x.ExcessBlobGas = uint64(0)
	case "goat.goat.v1.ExecutionPayload.gas_revenue":
		x.GasRevenue = nil
	case "goat.goat.v1.ExecutionPayload.add_voter_req":
		x.AddVoterReq = nil
	case "goat.goat.v1.ExecutionPayload.rm_voter_req":
		x.RmVoterReq = nil
	case "goat.goat.v1.ExecutionPayload.withdrawal_req":
		x.WithdrawalReq = nil
	case "goat.goat.v1.ExecutionPayload.rbf_req":
		x.RbfReq = nil
	case "goat.goat.v1.ExecutionPayload.cancel1_req":
		x.Cancel1Req = nil
	case "goat.goat.v1.ExecutionPayload.requests":
		x.Requests = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ExecutionPayload"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ExecutionPayload does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ExecutionPayload) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.goat.v1.ExecutionPayload.parent_hash":
		value := x.ParentHash
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.fee_recipient":
		value := x.FeeRecipient
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.state_root":
		value := x.StateRoot
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.receipts_root":
		value := x.ReceiptsRoot
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.logs_bloom":
		value := x.LogsBloom
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.prev_randao":
		value := x.PrevRandao
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.block_number":
		value := x.BlockNumber
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.ExecutionPayload.gas_limit":
		value := x.GasLimit
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.ExecutionPayload.gas_used":
		value := x.GasUsed
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.ExecutionPayload.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.ExecutionPayload.extra_data":
		value := x.ExtraData
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.base_fee_per_gas":
		value := x.BaseFeePerGas
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.block_hash":
		value := x.BlockHash
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.transactions":
		if len(x.Transactions) == 0 {
			return protoreflect.ValueOfList(&_ExecutionPayload_14_list{})
		}
		listValue := &_ExecutionPayload_14_list{list: &x.Transactions}
		return protoreflect.ValueOfList(listValue)
	case "goat.goat.v1.ExecutionPayload.beacon_root":
		value := x.BeaconRoot
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.ExecutionPayload.blob_gas_used":
		value := x.BlobGasUsed
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.ExecutionPayload.excess_blob_gas":
		value := x.ExcessBlobGas
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.ExecutionPayload.gas_revenue":
		value := x.GasRevenue
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "goat.goat.v1.ExecutionPayload.add_voter_req":
		if len(x.AddVoterReq) == 0 {
			return protoreflect.ValueOfList(&_ExecutionPayload_19_list{})
		}
		listValue := &_ExecutionPayload_19_list{list: &x.AddVoterReq}
		return protoreflect.ValueOfList(listValue)
	case "goat.goat.v1.ExecutionPayload.rm_voter_req":
		if len(x.RmVoterReq) == 0 {
			return protoreflect.ValueOfList(&_ExecutionPayload_20_list{})
		}
		listValue := &_ExecutionPayload_20_list{list: &x.RmVoterReq}
		return protoreflect.ValueOfList(listValue)
	case "goat.goat.v1.ExecutionPayload.withdrawal_req":
		if len(x.WithdrawalReq) == 0 {
			return protoreflect.ValueOfList(&_ExecutionPayload_21_list{})
		}
		listValue := &_ExecutionPayload_21_list{list: &x.WithdrawalReq}
		return protoreflect.ValueOfList(listValue)
	case "goat.goat.v1.ExecutionPayload.rbf_req":
		if len(x.RbfReq) == 0 {
			return protoreflect.ValueOfList(&_ExecutionPayload_22_list{})
		}
		listValue := &_ExecutionPayload_22_list{list: &x.RbfReq}
		return protoreflect.ValueOfList(listValue)
	case "goat.goat.v1.ExecutionPayload.cancel1_req":
		if len(x.Cancel1Req) == 0 {
			return protoreflect.ValueOfList(&_ExecutionPayload_23_list{})
		}
		listValue := &_ExecutionPayload_23_list{list: &x.Cancel1Req}
		return protoreflect.ValueOfList(listValue)
	case "goat.goat.v1.ExecutionPayload.requests":
		if len(x.Requests) == 0 {
			return protoreflect.ValueOfList(&_ExecutionPayload_24_list{})
		}
		listValue := &_ExecutionPayload_24_list{list: &x.Requests}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ExecutionPayload"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ExecutionPayload does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecutionPayload) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.goat.v1.ExecutionPayload.parent_hash":
		x.ParentHash = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.fee_recipient":
		x.FeeRecipient = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.state_root":
		x.StateRoot = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.receipts_root":
		x.ReceiptsRoot = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.logs_bloom":
		x.LogsBloom = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.prev_randao":
		x.PrevRandao = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.block_number":
		x.BlockNumber = value.Uint()
	case "goat.goat.v1.ExecutionPayload.gas_limit":
		x.GasLimit = value.Uint()
	case "goat.goat.v1.ExecutionPayload.gas_used":
		x.GasUsed = value.Uint()
	case "goat.goat.v1.ExecutionPayload.timestamp":
		x.Timestamp = value.Uint()
	case "goat.goat.v1.ExecutionPayload.extra_data":
		x.ExtraData = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.base_fee_per_gas":
		x.BaseFeePerGas = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.block_hash":
		x.BlockHash = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.transactions":
		lv := value.List()
		clv := lv.(*_ExecutionPayload_14_list)
		x.Transactions = *clv.list
	case "goat.goat.v1.ExecutionPayload.beacon_root":
		x.BeaconRoot = value.Bytes()
	case "goat.goat.v1.ExecutionPayload.blob_gas_used":
		x.BlobGasUsed = value.Uint()
	case "goat.goat.v1.ExecutionPayload.excess_blob_gas":
		x.ExcessBlobGas = value.Uint()
	case "goat.goat.v1.ExecutionPayload.gas_revenue":
		x.GasRevenue = value.Message().Interface().(*GasRevenueReq)
	case "goat.goat.v1.ExecutionPayload.add_voter_req":
		lv := value.List()
		clv := lv.(*_ExecutionPayload_19_list)
		x.AddVoterReq = *clv.list
	case "goat.goat.v1.ExecutionPayload.rm_voter_req":
		lv := value.List()
		clv := lv.(*_ExecutionPayload_20_list)
		x.RmVoterReq = *clv.list
	case "goat.goat.v1.ExecutionPayload.withdrawal_req":
		lv := value.List()
		clv := lv.(*_ExecutionPayload_21_list)
		x.WithdrawalReq = *clv.list
	case "goat.goat.v1.ExecutionPayload.rbf_req":
		lv := value.List()
		clv := lv.(*_ExecutionPayload_22_list)
		x.RbfReq = *clv.list
	case "goat.goat.v1.ExecutionPayload.cancel1_req":
		lv := value.List()
		clv := lv.(*_ExecutionPayload_23_list)
		x.Cancel1Req = *clv.list
	case "goat.goat.v1.ExecutionPayload.requests":
		lv := value.List()
		clv := lv.(*_ExecutionPayload_24_list)
		x.Requests = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ExecutionPayload"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ExecutionPayload does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecutionPayload) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.ExecutionPayload.transactions":
		if x.Transactions == nil {
			x.Transactions = [][]byte{}
		}
		value := &_ExecutionPayload_14_list{list: &x.Transactions}
		return protoreflect.ValueOfList(value)
	case "goat.goat.v1.ExecutionPayload.gas_revenue":
		if x.GasRevenue == nil {
			x.GasRevenue = new(GasRevenueReq)
		}
		return protoreflect.ValueOfMessage(x.GasRevenue.ProtoReflect())
	case "goat.goat.v1.ExecutionPayload.add_voter_req":
		if x.AddVoterReq == nil {
			x.AddVoterReq = []*AddVoterReq{}
		}
		value := &_ExecutionPayload_19_list{list: &x.AddVoterReq}
		return protoreflect.ValueOfList(value)
	case "goat.goat.v1.ExecutionPayload.rm_voter_req":
		if x.RmVoterReq == nil {
			x.RmVoterReq = []*RemoveVoterReq{}
		}
		value := &_ExecutionPayload_20_list{list: &x.RmVoterReq}
		return protoreflect.ValueOfList(value)
	case "goat.goat.v1.ExecutionPayload.withdrawal_req":
		if x.WithdrawalReq == nil {
			x.WithdrawalReq = []*WithdrawalReq{}
		}
		value := &_ExecutionPayload_21_list{list: &x.WithdrawalReq}
		return protoreflect.ValueOfList(value)
	case "goat.goat.v1.ExecutionPayload.rbf_req":
		if x.RbfReq == nil {
			x.RbfReq = []*ReplaceByFeeReq{}
		}
		value := &_ExecutionPayload_22_list{list: &x.RbfReq}
		return protoreflect.ValueOfList(value)
	case "goat.goat.v1.ExecutionPayload.cancel1_req":
		if x.Cancel1Req == nil {
			x.Cancel1Req = []*Cancel1Req{}
		}
		value := &_ExecutionPayload_23_list{list: &x.Cancel1Req}
		return protoreflect.ValueOfList(value)
	case "goat.goat.v1.ExecutionPayload.requests":
		if x.Requests == nil {
			x.Requests = [][]byte{}
		}
		value := &_ExecutionPayload_24_list{list: &x.Requests}
		return protoreflect.ValueOfList(value)
	case "goat.goat.v1.ExecutionPayload.parent_hash":
		panic(fmt.Errorf("field parent_hash of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.fee_recipient":
		panic(fmt.Errorf("field fee_recipient of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.state_root":
		panic(fmt.Errorf("field state_root of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.receipts_root":
		panic(fmt.Errorf("field receipts_root of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.logs_bloom":
		panic(fmt.Errorf("field logs_bloom of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.prev_randao":
		panic(fmt.Errorf("field prev_randao of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.block_number":
		panic(fmt.Errorf("field block_number of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.gas_limit":
		panic(fmt.Errorf("field gas_limit of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.gas_used":
		panic(fmt.Errorf("field gas_used of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.timestamp":
		panic(fmt.Errorf("field timestamp of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.extra_data":
		panic(fmt.Errorf("field extra_data of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.base_fee_per_gas":
		panic(fmt.Errorf("field base_fee_per_gas of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.block_hash":
		panic(fmt.Errorf("field block_hash of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.beacon_root":
		panic(fmt.Errorf("field beacon_root of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.blob_gas_used":
		panic(fmt.Errorf("field blob_gas_used of message goat.goat.v1.ExecutionPayload is not mutable"))
	case "goat.goat.v1.ExecutionPayload.excess_blob_gas":
		panic(fmt.Errorf("field excess_blob_gas of message goat.goat.v1.ExecutionPayload is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ExecutionPayload"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ExecutionPayload does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ExecutionPayload) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.ExecutionPayload.parent_hash":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.fee_recipient":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.state_root":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.receipts_root":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.logs_bloom":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.prev_randao":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.block_number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.ExecutionPayload.gas_limit":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.ExecutionPayload.gas_used":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.ExecutionPayload.timestamp":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.ExecutionPayload.extra_data":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.base_fee_per_gas":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.block_hash":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.transactions":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_ExecutionPayload_14_list{list: &list})
	case "goat.goat.v1.ExecutionPayload.beacon_root":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.ExecutionPayload.blob_gas_used":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.ExecutionPayload.excess_blob_gas":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.ExecutionPayload.gas_revenue":
		m := new(GasRevenueReq)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "goat.goat.v1.ExecutionPayload.add_voter_req":
		list := []*AddVoterReq{}
		return protoreflect.ValueOfList(&_ExecutionPayload_19_list{list: &list})
	case "goat.goat.v1.ExecutionPayload.rm_voter_req":
		list := []*RemoveVoterReq{}
		return protoreflect.ValueOfList(&_ExecutionPayload_20_list{list: &list})
	case "goat.goat.v1.ExecutionPayload.withdrawal_req":
		list := []*WithdrawalReq{}
		return protoreflect.ValueOfList(&_ExecutionPayload_21_list{list: &list})
	case "goat.goat.v1.ExecutionPayload.rbf_req":
		list := []*ReplaceByFeeReq{}
		return protoreflect.ValueOfList(&_ExecutionPayload_22_list{list: &list})
	case "goat.goat.v1.ExecutionPayload.cancel1_req":
		list := []*Cancel1Req{}
		return protoreflect.ValueOfList(&_ExecutionPayload_23_list{list: &list})
	case "goat.goat.v1.ExecutionPayload.requests":
		list := [][]byte{}
		return protoreflect.ValueOfList(&_ExecutionPayload_24_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ExecutionPayload"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ExecutionPayload does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ExecutionPayload) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.goat.v1.ExecutionPayload", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ExecutionPayload) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ExecutionPayload) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ExecutionPayload) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ExecutionPayload) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ExecutionPayload)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ParentHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FeeRecipient)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.StateRoot)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReceiptsRoot)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LogsBloom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PrevRandao)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlockNumber != 0 {
			n += 1 + runtime.Sov(uint64(x.BlockNumber))
		}
		if x.GasLimit != 0 {
			n += 1 + runtime.Sov(uint64(x.GasLimit))
		}
		if x.GasUsed != 0 {
			n += 1 + runtime.Sov(uint64(x.GasUsed))
		}
		if x.Timestamp != 0 {
			n += 1 + runtime.Sov(uint64(x.Timestamp))
		}
		l = len(x.ExtraData)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BaseFeePerGas)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BlockHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Transactions) > 0 {
			for _, b := range x.Transactions {
				l = len(b)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.BeaconRoot)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.BlobGasUsed != 0 {
			n += 2 + runtime.Sov(uint64(x.BlobGasUsed))
		}
		if x.ExcessBlobGas != 0 {
			n += 2 + runtime.Sov(uint64(x.ExcessBlobGas))
		}
		if x.GasRevenue != nil {
			l = options.Size(x.GasRevenue)
			n += 2 + l + runtime.Sov(uint64(l))
		}
		if len(x.AddVoterReq) > 0 {
			for _, e := range x.AddVoterReq {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.RmVoterReq) > 0 {
			for _, e := range x.RmVoterReq {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.WithdrawalReq) > 0 {
			for _, e := range x.WithdrawalReq {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.RbfReq) > 0 {
			for _, e := range x.RbfReq {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Cancel1Req) > 0 {
			for _, e := range x.Cancel1Req {
				l = options.Size(e)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.Requests) > 0 {
			for _, b := range x.Requests {
				l = len(b)
				n += 2 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ExecutionPayload)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Requests) > 0 {
			for iNdEx := len(x.Requests) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Requests[iNdEx])
				copy(dAtA[i:], x.Requests[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Requests[iNdEx])))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xc2
			}
		}
		if len(x.Cancel1Req) > 0 {
			for iNdEx := len(x.Cancel1Req) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Cancel1Req[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xba
			}
		}
		if len(x.RbfReq) > 0 {
			for iNdEx := len(x.RbfReq) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RbfReq[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xb2
			}
		}
		if len(x.WithdrawalReq) > 0 {
			for iNdEx := len(x.WithdrawalReq) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.WithdrawalReq[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xaa
			}
		}
		if len(x.RmVoterReq) > 0 {
			for iNdEx := len(x.RmVoterReq) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.RmVoterReq[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0xa2
			}
		}
		if len(x.AddVoterReq) > 0 {
			for iNdEx := len(x.AddVoterReq) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.AddVoterReq[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x1
				i--
				dAtA[i] = 0x9a
			}
		}
		if x.GasRevenue != nil {
			encoded, err := options.Marshal(x.GasRevenue)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x92
		}
		if x.ExcessBlobGas != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ExcessBlobGas))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x88
		}
		if x.BlobGasUsed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlobGasUsed))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x80
		}
		if len(x.BeaconRoot) > 0 {
			i -= len(x.BeaconRoot)
			copy(dAtA[i:], x.BeaconRoot)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BeaconRoot)))
			i--
			dAtA[i] = 0x7a
		}
		if len(x.Transactions) > 0 {
			for iNdEx := len(x.Transactions) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Transactions[iNdEx])
				copy(dAtA[i:], x.Transactions[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Transactions[iNdEx])))
				i--
				dAtA[i] = 0x72
			}
		}
		if len(x.BlockHash) > 0 {
			i -= len(x.BlockHash)
			copy(dAtA[i:], x.BlockHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BlockHash)))
			i--
			dAtA[i] = 0x6a
		}
		if len(x.BaseFeePerGas) > 0 {
			i -= len(x.BaseFeePerGas)
			copy(dAtA[i:], x.BaseFeePerGas)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseFeePerGas)))
			i--
			dAtA[i] = 0x62
		}
		if len(x.ExtraData) > 0 {
			i -= len(x.ExtraData)
			copy(dAtA[i:], x.ExtraData)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExtraData)))
			i--
			dAtA[i] = 0x5a
		}
		if x.Timestamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timestamp))
			i--
			dAtA[i] = 0x50
		}
		if x.GasUsed != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.GasUsed))
			i--
			dAtA[i] = 0x48
		}
		if x.GasLimit != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.GasLimit))
			i--
			dAtA[i] = 0x40
		}
		if x.BlockNumber != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BlockNumber))
			i--
			dAtA[i] = 0x38
		}
		if len(x.PrevRandao) > 0 {
			i -= len(x.PrevRandao)
			copy(dAtA[i:], x.PrevRandao)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PrevRandao)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.LogsBloom) > 0 {
			i -= len(x.LogsBloom)
			copy(dAtA[i:], x.LogsBloom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LogsBloom)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ReceiptsRoot) > 0 {
			i -= len(x.ReceiptsRoot)
			copy(dAtA[i:], x.ReceiptsRoot)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReceiptsRoot)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.StateRoot) > 0 {
			i -= len(x.StateRoot)
			copy(dAtA[i:], x.StateRoot)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StateRoot)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.FeeRecipient) > 0 {
			i -= len(x.FeeRecipient)
			copy(dAtA[i:], x.FeeRecipient)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FeeRecipient)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ParentHash) > 0 {
			i -= len(x.ParentHash)
			copy(dAtA[i:], x.ParentHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ParentHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ExecutionPayload)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExecutionPayload: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ExecutionPayload: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ParentHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ParentHash = append(x.ParentHash[:0], dAtA[iNdEx:postIndex]...)
				if x.ParentHash == nil {
					x.ParentHash = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FeeRecipient", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FeeRecipient = append(x.FeeRecipient[:0], dAtA[iNdEx:postIndex]...)
				if x.FeeRecipient == nil {
					x.FeeRecipient = []byte{}
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StateRoot", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StateRoot = append(x.StateRoot[:0], dAtA[iNdEx:postIndex]...)
				if x.StateRoot == nil {
					x.StateRoot = []byte{}
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReceiptsRoot", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReceiptsRoot = append(x.ReceiptsRoot[:0], dAtA[iNdEx:postIndex]...)
				if x.ReceiptsRoot == nil {
					x.ReceiptsRoot = []byte{}
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LogsBloom", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LogsBloom = append(x.LogsBloom[:0], dAtA[iNdEx:postIndex]...)
				if x.LogsBloom == nil {
					x.LogsBloom = []byte{}
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PrevRandao", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PrevRandao = append(x.PrevRandao[:0], dAtA[iNdEx:postIndex]...)
				if x.PrevRandao == nil {
					x.PrevRandao = []byte{}
				}
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockNumber", wireType)
				}
				x.BlockNumber = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlockNumber |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasLimit", wireType)
				}
				x.GasLimit = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.GasLimit |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasUsed", wireType)
				}
				x.GasUsed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.GasUsed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				x.Timestamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timestamp |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExtraData", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExtraData = append(x.ExtraData[:0], dAtA[iNdEx:postIndex]...)
				if x.ExtraData == nil {
					x.ExtraData = []byte{}
				}
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseFeePerGas", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseFeePerGas = append(x.BaseFeePerGas[:0], dAtA[iNdEx:postIndex]...)
				if x.BaseFeePerGas == nil {
					x.BaseFeePerGas = []byte{}
				}
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlockHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BlockHash = append(x.BlockHash[:0], dAtA[iNdEx:postIndex]...)
				if x.BlockHash == nil {
					x.BlockHash = []byte{}
				}
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Transactions", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Transactions = append(x.Transactions, make([]byte, postIndex-iNdEx))
				copy(x.Transactions[len(x.Transactions)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BeaconRoot", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BeaconRoot = append(x.BeaconRoot[:0], dAtA[iNdEx:postIndex]...)
				if x.BeaconRoot == nil {
					x.BeaconRoot = []byte{}
				}
				iNdEx = postIndex
			case 16:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BlobGasUsed", wireType)
				}
				x.BlobGasUsed = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BlobGasUsed |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 17:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExcessBlobGas", wireType)
				}
				x.ExcessBlobGas = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ExcessBlobGas |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 18:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field GasRevenue", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.GasRevenue == nil {
					x.GasRevenue = &GasRevenueReq{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.GasRevenue); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 19:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AddVoterReq", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AddVoterReq = append(x.AddVoterReq, &AddVoterReq{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AddVoterReq[len(x.AddVoterReq)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 20:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RmVoterReq", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RmVoterReq = append(x.RmVoterReq, &RemoveVoterReq{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RmVoterReq[len(x.RmVoterReq)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 21:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field WithdrawalReq", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.WithdrawalReq = append(x.WithdrawalReq, &WithdrawalReq{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.WithdrawalReq[len(x.WithdrawalReq)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 22:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RbfReq", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RbfReq = append(x.RbfReq, &ReplaceByFeeReq{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RbfReq[len(x.RbfReq)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 23:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Cancel1Req", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Cancel1Req = append(x.Cancel1Req, &Cancel1Req{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Cancel1Req[len(x.Cancel1Req)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 24:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Requests", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Requests = append(x.Requests, make([]byte, postIndex-iNdEx))
				copy(x.Requests[len(x.Requests)-1], dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_GasRevenueReq        protoreflect.MessageDescriptor
	fd_GasRevenueReq_amount protoreflect.FieldDescriptor
)

func init() {
	file_goat_goat_v1_goat_proto_init()
	md_GasRevenueReq = File_goat_goat_v1_goat_proto.Messages().ByName("GasRevenueReq")
	fd_GasRevenueReq_amount = md_GasRevenueReq.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_GasRevenueReq)(nil)

type fastReflection_GasRevenueReq GasRevenueReq

func (x *GasRevenueReq) ProtoReflect() protoreflect.Message {
	return (*fastReflection_GasRevenueReq)(x)
}

func (x *GasRevenueReq) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_goat_v1_goat_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_GasRevenueReq_messageType fastReflection_GasRevenueReq_messageType
var _ protoreflect.MessageType = fastReflection_GasRevenueReq_messageType{}

type fastReflection_GasRevenueReq_messageType struct{}

func (x fastReflection_GasRevenueReq_messageType) Zero() protoreflect.Message {
	return (*fastReflection_GasRevenueReq)(nil)
}
func (x fastReflection_GasRevenueReq_messageType) New() protoreflect.Message {
	return new(fastReflection_GasRevenueReq)
}
func (x fastReflection_GasRevenueReq_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_GasRevenueReq
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_GasRevenueReq) Descriptor() protoreflect.MessageDescriptor {
	return md_GasRevenueReq
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_GasRevenueReq) Type() protoreflect.MessageType {
	return _fastReflection_GasRevenueReq_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_GasRevenueReq) New() protoreflect.Message {
	return new(fastReflection_GasRevenueReq)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_GasRevenueReq) Interface() protoreflect.ProtoMessage {
	return (*GasRevenueReq)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_GasRevenueReq) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_GasRevenueReq_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_GasRevenueReq) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.goat.v1.GasRevenueReq.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.GasRevenueReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.GasRevenueReq does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GasRevenueReq) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.goat.v1.GasRevenueReq.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.GasRevenueReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.GasRevenueReq does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_GasRevenueReq) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.goat.v1.GasRevenueReq.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.GasRevenueReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.GasRevenueReq does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GasRevenueReq) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.goat.v1.GasRevenueReq.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.GasRevenueReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.GasRevenueReq does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GasRevenueReq) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.GasRevenueReq.amount":
		panic(fmt.Errorf("field amount of message goat.goat.v1.GasRevenueReq is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.GasRevenueReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.GasRevenueReq does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_GasRevenueReq) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.GasRevenueReq.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.GasRevenueReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.GasRevenueReq does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_GasRevenueReq) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.goat.v1.GasRevenueReq", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_GasRevenueReq) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_GasRevenueReq) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_GasRevenueReq) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_GasRevenueReq) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*GasRevenueReq)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*GasRevenueReq)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x22
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*GasRevenueReq)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GasRevenueReq: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: GasRevenueReq: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_AddVoterReq             protoreflect.MessageDescriptor
	fd_AddVoterReq_voter       protoreflect.FieldDescriptor
	fd_AddVoterReq_pubkey_hash protoreflect.FieldDescriptor
)

func init() {
	file_goat_goat_v1_goat_proto_init()
	md_AddVoterReq = File_goat_goat_v1_goat_proto.Messages().ByName("AddVoterReq")
	fd_AddVoterReq_voter = md_AddVoterReq.Fields().ByName("voter")
	fd_AddVoterReq_pubkey_hash = md_AddVoterReq.Fields().ByName("pubkey_hash")
}

var _ protoreflect.Message = (*fastReflection_AddVoterReq)(nil)

type fastReflection_AddVoterReq AddVoterReq

func (x *AddVoterReq) ProtoReflect() protoreflect.Message {
	return (*fastReflection_AddVoterReq)(x)
}

func (x *AddVoterReq) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_goat_v1_goat_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_AddVoterReq_messageType fastReflection_AddVoterReq_messageType
var _ protoreflect.MessageType = fastReflection_AddVoterReq_messageType{}

type fastReflection_AddVoterReq_messageType struct{}

func (x fastReflection_AddVoterReq_messageType) Zero() protoreflect.Message {
	return (*fastReflection_AddVoterReq)(nil)
}
func (x fastReflection_AddVoterReq_messageType) New() protoreflect.Message {
	return new(fastReflection_AddVoterReq)
}
func (x fastReflection_AddVoterReq_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_AddVoterReq
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_AddVoterReq) Descriptor() protoreflect.MessageDescriptor {
	return md_AddVoterReq
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_AddVoterReq) Type() protoreflect.MessageType {
	return _fastReflection_AddVoterReq_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_AddVoterReq) New() protoreflect.Message {
	return new(fastReflection_AddVoterReq)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_AddVoterReq) Interface() protoreflect.ProtoMessage {
	return (*AddVoterReq)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_AddVoterReq) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Voter) != 0 {
		value := protoreflect.ValueOfBytes(x.Voter)
		if !f(fd_AddVoterReq_voter, value) {
			return
		}
	}
	if len(x.PubkeyHash) != 0 {
		value := protoreflect.ValueOfBytes(x.PubkeyHash)
		if !f(fd_AddVoterReq_pubkey_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_AddVoterReq) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.goat.v1.AddVoterReq.voter":
		return len(x.Voter) != 0
	case "goat.goat.v1.AddVoterReq.pubkey_hash":
		return len(x.PubkeyHash) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.AddVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.AddVoterReq does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddVoterReq) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.goat.v1.AddVoterReq.voter":
		x.Voter = nil
	case "goat.goat.v1.AddVoterReq.pubkey_hash":
		x.PubkeyHash = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.AddVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.AddVoterReq does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_AddVoterReq) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.goat.v1.AddVoterReq.voter":
		value := x.Voter
		return protoreflect.ValueOfBytes(value)
	case "goat.goat.v1.AddVoterReq.pubkey_hash":
		value := x.PubkeyHash
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.AddVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.AddVoterReq does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddVoterReq) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.goat.v1.AddVoterReq.voter":
		x.Voter = value.Bytes()
	case "goat.goat.v1.AddVoterReq.pubkey_hash":
		x.PubkeyHash = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.AddVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.AddVoterReq does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddVoterReq) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.AddVoterReq.voter":
		panic(fmt.Errorf("field voter of message goat.goat.v1.AddVoterReq is not mutable"))
	case "goat.goat.v1.AddVoterReq.pubkey_hash":
		panic(fmt.Errorf("field pubkey_hash of message goat.goat.v1.AddVoterReq is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.AddVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.AddVoterReq does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_AddVoterReq) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.AddVoterReq.voter":
		return protoreflect.ValueOfBytes(nil)
	case "goat.goat.v1.AddVoterReq.pubkey_hash":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.AddVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.AddVoterReq does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_AddVoterReq) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.goat.v1.AddVoterReq", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_AddVoterReq) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_AddVoterReq) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_AddVoterReq) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_AddVoterReq) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*AddVoterReq)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Voter)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PubkeyHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*AddVoterReq)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.PubkeyHash) > 0 {
			i -= len(x.PubkeyHash)
			copy(dAtA[i:], x.PubkeyHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PubkeyHash)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Voter) > 0 {
			i -= len(x.Voter)
			copy(dAtA[i:], x.Voter)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Voter)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*AddVoterReq)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddVoterReq: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: AddVoterReq: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Voter", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Voter = append(x.Voter[:0], dAtA[iNdEx:postIndex]...)
				if x.Voter == nil {
					x.Voter = []byte{}
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PubkeyHash", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PubkeyHash = append(x.PubkeyHash[:0], dAtA[iNdEx:postIndex]...)
				if x.PubkeyHash == nil {
					x.PubkeyHash = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_RemoveVoterReq       protoreflect.MessageDescriptor
	fd_RemoveVoterReq_voter protoreflect.FieldDescriptor
)

func init() {
	file_goat_goat_v1_goat_proto_init()
	md_RemoveVoterReq = File_goat_goat_v1_goat_proto.Messages().ByName("RemoveVoterReq")
	fd_RemoveVoterReq_voter = md_RemoveVoterReq.Fields().ByName("voter")
}

var _ protoreflect.Message = (*fastReflection_RemoveVoterReq)(nil)

type fastReflection_RemoveVoterReq RemoveVoterReq

func (x *RemoveVoterReq) ProtoReflect() protoreflect.Message {
	return (*fastReflection_RemoveVoterReq)(x)
}

func (x *RemoveVoterReq) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_goat_v1_goat_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_RemoveVoterReq_messageType fastReflection_RemoveVoterReq_messageType
var _ protoreflect.MessageType = fastReflection_RemoveVoterReq_messageType{}

type fastReflection_RemoveVoterReq_messageType struct{}

func (x fastReflection_RemoveVoterReq_messageType) Zero() protoreflect.Message {
	return (*fastReflection_RemoveVoterReq)(nil)
}
func (x fastReflection_RemoveVoterReq_messageType) New() protoreflect.Message {
	return new(fastReflection_RemoveVoterReq)
}
func (x fastReflection_RemoveVoterReq_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_RemoveVoterReq
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_RemoveVoterReq) Descriptor() protoreflect.MessageDescriptor {
	return md_RemoveVoterReq
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_RemoveVoterReq) Type() protoreflect.MessageType {
	return _fastReflection_RemoveVoterReq_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_RemoveVoterReq) New() protoreflect.Message {
	return new(fastReflection_RemoveVoterReq)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_RemoveVoterReq) Interface() protoreflect.ProtoMessage {
	return (*RemoveVoterReq)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_RemoveVoterReq) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.Voter) != 0 {
		value := protoreflect.ValueOfBytes(x.Voter)
		if !f(fd_RemoveVoterReq_voter, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_RemoveVoterReq) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.goat.v1.RemoveVoterReq.voter":
		return len(x.Voter) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.RemoveVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.RemoveVoterReq does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveVoterReq) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.goat.v1.RemoveVoterReq.voter":
		x.Voter = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.RemoveVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.RemoveVoterReq does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_RemoveVoterReq) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.goat.v1.RemoveVoterReq.voter":
		value := x.Voter
		return protoreflect.ValueOfBytes(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.RemoveVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.RemoveVoterReq does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveVoterReq) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.goat.v1.RemoveVoterReq.voter":
		x.Voter = value.Bytes()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.RemoveVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.RemoveVoterReq does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveVoterReq) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.RemoveVoterReq.voter":
		panic(fmt.Errorf("field voter of message goat.goat.v1.RemoveVoterReq is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.RemoveVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.RemoveVoterReq does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_RemoveVoterReq) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.RemoveVoterReq.voter":
		return protoreflect.ValueOfBytes(nil)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.RemoveVoterReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.RemoveVoterReq does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_RemoveVoterReq) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.goat.v1.RemoveVoterReq", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_RemoveVoterReq) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_RemoveVoterReq) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_RemoveVoterReq) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_RemoveVoterReq) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*RemoveVoterReq)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Voter)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*RemoveVoterReq)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Voter) > 0 {
			i -= len(x.Voter)
			copy(dAtA[i:], x.Voter)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Voter)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*RemoveVoterReq)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemoveVoterReq: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: RemoveVoterReq: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Voter", wireType)
				}
				var byteLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					byteLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if byteLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + byteLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Voter = append(x.Voter[:0], dAtA[iNdEx:postIndex]...)
				if x.Voter == nil {
					x.Voter = []byte{}
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_WithdrawalReq              protoreflect.MessageDescriptor
	fd_WithdrawalReq_id           protoreflect.FieldDescriptor
	fd_WithdrawalReq_amount       protoreflect.FieldDescriptor
	fd_WithdrawalReq_max_tx_price protoreflect.FieldDescriptor
	fd_WithdrawalReq_address      protoreflect.FieldDescriptor
)

func init() {
	file_goat_goat_v1_goat_proto_init()
	md_WithdrawalReq = File_goat_goat_v1_goat_proto.Messages().ByName("WithdrawalReq")
	fd_WithdrawalReq_id = md_WithdrawalReq.Fields().ByName("id")
	fd_WithdrawalReq_amount = md_WithdrawalReq.Fields().ByName("amount")
	fd_WithdrawalReq_max_tx_price = md_WithdrawalReq.Fields().ByName("max_tx_price")
	fd_WithdrawalReq_address = md_WithdrawalReq.Fields().ByName("address")
}

var _ protoreflect.Message = (*fastReflection_WithdrawalReq)(nil)

type fastReflection_WithdrawalReq WithdrawalReq

func (x *WithdrawalReq) ProtoReflect() protoreflect.Message {
	return (*fastReflection_WithdrawalReq)(x)
}

func (x *WithdrawalReq) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_goat_v1_goat_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_WithdrawalReq_messageType fastReflection_WithdrawalReq_messageType
var _ protoreflect.MessageType = fastReflection_WithdrawalReq_messageType{}

type fastReflection_WithdrawalReq_messageType struct{}

func (x fastReflection_WithdrawalReq_messageType) Zero() protoreflect.Message {
	return (*fastReflection_WithdrawalReq)(nil)
}
func (x fastReflection_WithdrawalReq_messageType) New() protoreflect.Message {
	return new(fastReflection_WithdrawalReq)
}
func (x fastReflection_WithdrawalReq_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_WithdrawalReq
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_WithdrawalReq) Descriptor() protoreflect.MessageDescriptor {
	return md_WithdrawalReq
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_WithdrawalReq) Type() protoreflect.MessageType {
	return _fastReflection_WithdrawalReq_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_WithdrawalReq) New() protoreflect.Message {
	return new(fastReflection_WithdrawalReq)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_WithdrawalReq) Interface() protoreflect.ProtoMessage {
	return (*WithdrawalReq)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_WithdrawalReq) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_WithdrawalReq_id, value) {
			return
		}
	}
	if x.Amount != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Amount)
		if !f(fd_WithdrawalReq_amount, value) {
			return
		}
	}
	if x.MaxTxPrice != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxTxPrice)
		if !f(fd_WithdrawalReq_max_tx_price, value) {
			return
		}
	}
	if x.Address != "" {
		value := protoreflect.ValueOfString(x.Address)
		if !f(fd_WithdrawalReq_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_WithdrawalReq) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.goat.v1.WithdrawalReq.id":
		return x.Id != uint64(0)
	case "goat.goat.v1.WithdrawalReq.amount":
		return x.Amount != uint64(0)
	case "goat.goat.v1.WithdrawalReq.max_tx_price":
		return x.MaxTxPrice != uint64(0)
	case "goat.goat.v1.WithdrawalReq.address":
		return x.Address != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.WithdrawalReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.WithdrawalReq does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawalReq) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.goat.v1.WithdrawalReq.id":
		x.Id = uint64(0)
	case "goat.goat.v1.WithdrawalReq.amount":
		x.Amount = uint64(0)
	case "goat.goat.v1.WithdrawalReq.max_tx_price":
		x.MaxTxPrice = uint64(0)
	case "goat.goat.v1.WithdrawalReq.address":
		x.Address = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.WithdrawalReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.WithdrawalReq does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_WithdrawalReq) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.goat.v1.WithdrawalReq.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.WithdrawalReq.amount":
		value := x.Amount
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.WithdrawalReq.max_tx_price":
		value := x.MaxTxPrice
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.WithdrawalReq.address":
		value := x.Address
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.WithdrawalReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.WithdrawalReq does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawalReq) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.goat.v1.WithdrawalReq.id":
		x.Id = value.Uint()
	case "goat.goat.v1.WithdrawalReq.amount":
		x.Amount = value.Uint()
	case "goat.goat.v1.WithdrawalReq.max_tx_price":
		x.MaxTxPrice = value.Uint()
	case "goat.goat.v1.WithdrawalReq.address":
		x.Address = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.WithdrawalReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.WithdrawalReq does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawalReq) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.WithdrawalReq.id":
		panic(fmt.Errorf("field id of message goat.goat.v1.WithdrawalReq is not mutable"))
	case "goat.goat.v1.WithdrawalReq.amount":
		panic(fmt.Errorf("field amount of message goat.goat.v1.WithdrawalReq is not mutable"))
	case "goat.goat.v1.WithdrawalReq.max_tx_price":
		panic(fmt.Errorf("field max_tx_price of message goat.goat.v1.WithdrawalReq is not mutable"))
	case "goat.goat.v1.WithdrawalReq.address":
		panic(fmt.Errorf("field address of message goat.goat.v1.WithdrawalReq is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.WithdrawalReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.WithdrawalReq does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_WithdrawalReq) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.WithdrawalReq.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.WithdrawalReq.amount":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.WithdrawalReq.max_tx_price":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.WithdrawalReq.address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.WithdrawalReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.WithdrawalReq does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_WithdrawalReq) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.goat.v1.WithdrawalReq", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_WithdrawalReq) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_WithdrawalReq) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_WithdrawalReq) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_WithdrawalReq) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*WithdrawalReq)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.Amount != 0 {
			n += 1 + runtime.Sov(uint64(x.Amount))
		}
		if x.MaxTxPrice != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxTxPrice))
		}
		l = len(x.Address)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*WithdrawalReq)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Address) > 0 {
			i -= len(x.Address)
			copy(dAtA[i:], x.Address)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Address)))
			i--
			dAtA[i] = 0x22
		}
		if x.MaxTxPrice != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxTxPrice))
			i--
			dAtA[i] = 0x18
		}
		if x.Amount != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Amount))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*WithdrawalReq)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WithdrawalReq: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: WithdrawalReq: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				x.Amount = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Amount |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxTxPrice", wireType)
				}
				x.MaxTxPrice = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxTxPrice |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Address = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ReplaceByFeeReq              protoreflect.MessageDescriptor
	fd_ReplaceByFeeReq_id           protoreflect.FieldDescriptor
	fd_ReplaceByFeeReq_max_tx_price protoreflect.FieldDescriptor
)

func init() {
	file_goat_goat_v1_goat_proto_init()
	md_ReplaceByFeeReq = File_goat_goat_v1_goat_proto.Messages().ByName("ReplaceByFeeReq")
	fd_ReplaceByFeeReq_id = md_ReplaceByFeeReq.Fields().ByName("id")
	fd_ReplaceByFeeReq_max_tx_price = md_ReplaceByFeeReq.Fields().ByName("max_tx_price")
}

var _ protoreflect.Message = (*fastReflection_ReplaceByFeeReq)(nil)

type fastReflection_ReplaceByFeeReq ReplaceByFeeReq

func (x *ReplaceByFeeReq) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ReplaceByFeeReq)(x)
}

func (x *ReplaceByFeeReq) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_goat_v1_goat_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ReplaceByFeeReq_messageType fastReflection_ReplaceByFeeReq_messageType
var _ protoreflect.MessageType = fastReflection_ReplaceByFeeReq_messageType{}

type fastReflection_ReplaceByFeeReq_messageType struct{}

func (x fastReflection_ReplaceByFeeReq_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ReplaceByFeeReq)(nil)
}
func (x fastReflection_ReplaceByFeeReq_messageType) New() protoreflect.Message {
	return new(fastReflection_ReplaceByFeeReq)
}
func (x fastReflection_ReplaceByFeeReq_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ReplaceByFeeReq
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ReplaceByFeeReq) Descriptor() protoreflect.MessageDescriptor {
	return md_ReplaceByFeeReq
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ReplaceByFeeReq) Type() protoreflect.MessageType {
	return _fastReflection_ReplaceByFeeReq_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ReplaceByFeeReq) New() protoreflect.Message {
	return new(fastReflection_ReplaceByFeeReq)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ReplaceByFeeReq) Interface() protoreflect.ProtoMessage {
	return (*ReplaceByFeeReq)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ReplaceByFeeReq) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_ReplaceByFeeReq_id, value) {
			return
		}
	}
	if x.MaxTxPrice != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MaxTxPrice)
		if !f(fd_ReplaceByFeeReq_max_tx_price, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ReplaceByFeeReq) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.goat.v1.ReplaceByFeeReq.id":
		return x.Id != uint64(0)
	case "goat.goat.v1.ReplaceByFeeReq.max_tx_price":
		return x.MaxTxPrice != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ReplaceByFeeReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ReplaceByFeeReq does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReplaceByFeeReq) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.goat.v1.ReplaceByFeeReq.id":
		x.Id = uint64(0)
	case "goat.goat.v1.ReplaceByFeeReq.max_tx_price":
		x.MaxTxPrice = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ReplaceByFeeReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ReplaceByFeeReq does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ReplaceByFeeReq) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.goat.v1.ReplaceByFeeReq.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "goat.goat.v1.ReplaceByFeeReq.max_tx_price":
		value := x.MaxTxPrice
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ReplaceByFeeReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ReplaceByFeeReq does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReplaceByFeeReq) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.goat.v1.ReplaceByFeeReq.id":
		x.Id = value.Uint()
	case "goat.goat.v1.ReplaceByFeeReq.max_tx_price":
		x.MaxTxPrice = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ReplaceByFeeReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ReplaceByFeeReq does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReplaceByFeeReq) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.ReplaceByFeeReq.id":
		panic(fmt.Errorf("field id of message goat.goat.v1.ReplaceByFeeReq is not mutable"))
	case "goat.goat.v1.ReplaceByFeeReq.max_tx_price":
		panic(fmt.Errorf("field max_tx_price of message goat.goat.v1.ReplaceByFeeReq is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ReplaceByFeeReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ReplaceByFeeReq does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ReplaceByFeeReq) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.ReplaceByFeeReq.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "goat.goat.v1.ReplaceByFeeReq.max_tx_price":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.ReplaceByFeeReq"))
		}
		panic(fmt.Errorf("message goat.goat.v1.ReplaceByFeeReq does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ReplaceByFeeReq) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.goat.v1.ReplaceByFeeReq", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ReplaceByFeeReq) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ReplaceByFeeReq) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ReplaceByFeeReq) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ReplaceByFeeReq) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ReplaceByFeeReq)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.MaxTxPrice != 0 {
			n += 1 + runtime.Sov(uint64(x.MaxTxPrice))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ReplaceByFeeReq)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MaxTxPrice != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MaxTxPrice))
			i--
			dAtA[i] = 0x10
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ReplaceByFeeReq)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReplaceByFeeReq: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ReplaceByFeeReq: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MaxTxPrice", wireType)
				}
				x.MaxTxPrice = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MaxTxPrice |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Cancel1Req    protoreflect.MessageDescriptor
	fd_Cancel1Req_id protoreflect.FieldDescriptor
)

func init() {
	file_goat_goat_v1_goat_proto_init()
	md_Cancel1Req = File_goat_goat_v1_goat_proto.Messages().ByName("Cancel1Req")
	fd_Cancel1Req_id = md_Cancel1Req.Fields().ByName("id")
}

var _ protoreflect.Message = (*fastReflection_Cancel1Req)(nil)

type fastReflection_Cancel1Req Cancel1Req

func (x *Cancel1Req) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Cancel1Req)(x)
}

func (x *Cancel1Req) slowProtoReflect() protoreflect.Message {
	mi := &file_goat_goat_v1_goat_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Cancel1Req_messageType fastReflection_Cancel1Req_messageType
var _ protoreflect.MessageType = fastReflection_Cancel1Req_messageType{}

type fastReflection_Cancel1Req_messageType struct{}

func (x fastReflection_Cancel1Req_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Cancel1Req)(nil)
}
func (x fastReflection_Cancel1Req_messageType) New() protoreflect.Message {
	return new(fastReflection_Cancel1Req)
}
func (x fastReflection_Cancel1Req_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Cancel1Req
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Cancel1Req) Descriptor() protoreflect.MessageDescriptor {
	return md_Cancel1Req
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Cancel1Req) Type() protoreflect.MessageType {
	return _fastReflection_Cancel1Req_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Cancel1Req) New() protoreflect.Message {
	return new(fastReflection_Cancel1Req)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Cancel1Req) Interface() protoreflect.ProtoMessage {
	return (*Cancel1Req)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Cancel1Req) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_Cancel1Req_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Cancel1Req) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "goat.goat.v1.Cancel1Req.id":
		return x.Id != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.Cancel1Req"))
		}
		panic(fmt.Errorf("message goat.goat.v1.Cancel1Req does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Cancel1Req) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "goat.goat.v1.Cancel1Req.id":
		x.Id = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.Cancel1Req"))
		}
		panic(fmt.Errorf("message goat.goat.v1.Cancel1Req does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Cancel1Req) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "goat.goat.v1.Cancel1Req.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.Cancel1Req"))
		}
		panic(fmt.Errorf("message goat.goat.v1.Cancel1Req does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Cancel1Req) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "goat.goat.v1.Cancel1Req.id":
		x.Id = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.Cancel1Req"))
		}
		panic(fmt.Errorf("message goat.goat.v1.Cancel1Req does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Cancel1Req) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.Cancel1Req.id":
		panic(fmt.Errorf("field id of message goat.goat.v1.Cancel1Req is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.Cancel1Req"))
		}
		panic(fmt.Errorf("message goat.goat.v1.Cancel1Req does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Cancel1Req) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "goat.goat.v1.Cancel1Req.id":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: goat.goat.v1.Cancel1Req"))
		}
		panic(fmt.Errorf("message goat.goat.v1.Cancel1Req does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Cancel1Req) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in goat.goat.v1.Cancel1Req", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Cancel1Req) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Cancel1Req) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Cancel1Req) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Cancel1Req) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Cancel1Req)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Cancel1Req)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Cancel1Req)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Cancel1Req: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Cancel1Req: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: goat/goat/v1/goat.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExecutionPayload
type ExecutionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash    []byte             `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	FeeRecipient  []byte             `protobuf:"bytes,2,opt,name=fee_recipient,json=feeRecipient,proto3" json:"fee_recipient,omitempty"`
	StateRoot     []byte             `protobuf:"bytes,3,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`
	ReceiptsRoot  []byte             `protobuf:"bytes,4,opt,name=receipts_root,json=receiptsRoot,proto3" json:"receipts_root,omitempty"`
	LogsBloom     []byte             `protobuf:"bytes,5,opt,name=logs_bloom,json=logsBloom,proto3" json:"logs_bloom,omitempty"`
	PrevRandao    []byte             `protobuf:"bytes,6,opt,name=prev_randao,json=prevRandao,proto3" json:"prev_randao,omitempty"`
	BlockNumber   uint64             `protobuf:"varint,7,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	GasLimit      uint64             `protobuf:"varint,8,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	GasUsed       uint64             `protobuf:"varint,9,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Timestamp     uint64             `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ExtraData     []byte             `protobuf:"bytes,11,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	BaseFeePerGas []byte             `protobuf:"bytes,12,opt,name=base_fee_per_gas,json=baseFeePerGas,proto3" json:"base_fee_per_gas,omitempty"`
	BlockHash     []byte             `protobuf:"bytes,13,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Transactions  [][]byte           `protobuf:"bytes,14,rep,name=transactions,proto3" json:"transactions,omitempty"`
	BeaconRoot    []byte             `protobuf:"bytes,15,opt,name=beacon_root,json=beaconRoot,proto3" json:"beacon_root,omitempty"`
	BlobGasUsed   uint64             `protobuf:"varint,16,opt,name=blob_gas_used,json=blobGasUsed,proto3" json:"blob_gas_used,omitempty"`
	ExcessBlobGas uint64             `protobuf:"varint,17,opt,name=excess_blob_gas,json=excessBlobGas,proto3" json:"excess_blob_gas,omitempty"`
	GasRevenue    *GasRevenueReq     `protobuf:"bytes,18,opt,name=gas_revenue,json=gasRevenue,proto3" json:"gas_revenue,omitempty"`
	AddVoterReq   []*AddVoterReq     `protobuf:"bytes,19,rep,name=add_voter_req,json=addVoterReq,proto3" json:"add_voter_req,omitempty"`
	RmVoterReq    []*RemoveVoterReq  `protobuf:"bytes,20,rep,name=rm_voter_req,json=rmVoterReq,proto3" json:"rm_voter_req,omitempty"`
	WithdrawalReq []*WithdrawalReq   `protobuf:"bytes,21,rep,name=withdrawal_req,json=withdrawalReq,proto3" json:"withdrawal_req,omitempty"`
	RbfReq        []*ReplaceByFeeReq `protobuf:"bytes,22,rep,name=rbf_req,json=rbfReq,proto3" json:"rbf_req,omitempty"`
	Cancel1Req    []*Cancel1Req      `protobuf:"bytes,23,rep,name=cancel1_req,json=cancel1Req,proto3" json:"cancel1_req,omitempty"`
	Requests      [][]byte           `protobuf:"bytes,24,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *ExecutionPayload) Reset() {
	*x = ExecutionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_goat_v1_goat_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPayload) ProtoMessage() {}

// Deprecated: Use ExecutionPayload.ProtoReflect.Descriptor instead.
func (*ExecutionPayload) Descriptor() ([]byte, []int) {
	return file_goat_goat_v1_goat_proto_rawDescGZIP(), []int{0}
}

func (x *ExecutionPayload) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ExecutionPayload) GetFeeRecipient() []byte {
	if x != nil {
		return x.FeeRecipient
	}
	return nil
}

func (x *ExecutionPayload) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *ExecutionPayload) GetReceiptsRoot() []byte {
	if x != nil {
		return x.ReceiptsRoot
	}
	return nil
}

func (x *ExecutionPayload) GetLogsBloom() []byte {
	if x != nil {
		return x.LogsBloom
	}
	return nil
}

func (x *ExecutionPayload) GetPrevRandao() []byte {
	if x != nil {
		return x.PrevRandao
	}
	return nil
}

func (x *ExecutionPayload) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ExecutionPayload) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ExecutionPayload) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ExecutionPayload) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ExecutionPayload) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *ExecutionPayload) GetBaseFeePerGas() []byte {
	if x != nil {
		return x.BaseFeePerGas
	}
	return nil
}

func (x *ExecutionPayload) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *ExecutionPayload) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *ExecutionPayload) GetBeaconRoot() []byte {
	if x != nil {
		return x.BeaconRoot
	}
	return nil
}

func (x *ExecutionPayload) GetBlobGasUsed() uint64 {
	if x != nil {
		return x.BlobGasUsed
	}
	return 0
}

func (x *ExecutionPayload) GetExcessBlobGas() uint64 {
	if x != nil {
		return x.ExcessBlobGas
	}
	return 0
}

func (x *ExecutionPayload) GetGasRevenue() *GasRevenueReq {
	if x != nil {
		return x.GasRevenue
	}
	return nil
}

func (x *ExecutionPayload) GetAddVoterReq() []*AddVoterReq {
	if x != nil {
		return x.AddVoterReq
	}
	return nil
}

func (x *ExecutionPayload) GetRmVoterReq() []*RemoveVoterReq {
	if x != nil {
		return x.RmVoterReq
	}
	return nil
}

func (x *ExecutionPayload) GetWithdrawalReq() []*WithdrawalReq {
	if x != nil {
		return x.WithdrawalReq
	}
	return nil
}

func (x *ExecutionPayload) GetRbfReq() []*ReplaceByFeeReq {
	if x != nil {
		return x.RbfReq
	}
	return nil
}

func (x *ExecutionPayload) GetCancel1Req() []*Cancel1Req {
	if x != nil {
		return x.Cancel1Req
	}
	return nil
}

func (x *ExecutionPayload) GetRequests() [][]byte {
	if x != nil {
		return x.Requests
	}
	return nil
}

// GasRevenueReq
type GasRevenueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GasRevenueReq) Reset() {
	*x = GasRevenueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_goat_v1_goat_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasRevenueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasRevenueReq) ProtoMessage() {}

// Deprecated: Use GasRevenueReq.ProtoReflect.Descriptor instead.
func (*GasRevenueReq) Descriptor() ([]byte, []int) {
	return file_goat_goat_v1_goat_proto_rawDescGZIP(), []int{1}
}

func (x *GasRevenueReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// AddVoterReq
type AddVoterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voter      []byte `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
	PubkeyHash []byte `protobuf:"bytes,2,opt,name=pubkey_hash,json=pubkeyHash,proto3" json:"pubkey_hash,omitempty"`
}

func (x *AddVoterReq) Reset() {
	*x = AddVoterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_goat_v1_goat_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVoterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVoterReq) ProtoMessage() {}

// Deprecated: Use AddVoterReq.ProtoReflect.Descriptor instead.
func (*AddVoterReq) Descriptor() ([]byte, []int) {
	return file_goat_goat_v1_goat_proto_rawDescGZIP(), []int{2}
}

func (x *AddVoterReq) GetVoter() []byte {
	if x != nil {
		return x.Voter
	}
	return nil
}

func (x *AddVoterReq) GetPubkeyHash() []byte {
	if x != nil {
		return x.PubkeyHash
	}
	return nil
}

// RemoveVoterReq
type RemoveVoterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voter []byte `protobuf:"bytes,1,opt,name=voter,proto3" json:"voter,omitempty"`
}

func (x *RemoveVoterReq) Reset() {
	*x = RemoveVoterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_goat_v1_goat_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveVoterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVoterReq) ProtoMessage() {}

// Deprecated: Use RemoveVoterReq.ProtoReflect.Descriptor instead.
func (*RemoveVoterReq) Descriptor() ([]byte, []int) {
	return file_goat_goat_v1_goat_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveVoterReq) GetVoter() []byte {
	if x != nil {
		return x.Voter
	}
	return nil
}

// WithdrawalReq
type WithdrawalReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount     uint64 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	MaxTxPrice uint64 `protobuf:"varint,3,opt,name=max_tx_price,json=maxTxPrice,proto3" json:"max_tx_price,omitempty"`
	Address    string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *WithdrawalReq) Reset() {
	*x = WithdrawalReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_goat_v1_goat_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawalReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawalReq) ProtoMessage() {}

// Deprecated: Use WithdrawalReq.ProtoReflect.Descriptor instead.
func (*WithdrawalReq) Descriptor() ([]byte, []int) {
	return file_goat_goat_v1_goat_proto_rawDescGZIP(), []int{4}
}

func (x *WithdrawalReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WithdrawalReq) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawalReq) GetMaxTxPrice() uint64 {
	if x != nil {
		return x.MaxTxPrice
	}
	return 0
}

func (x *WithdrawalReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// ReplaceByFeeReq
type ReplaceByFeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MaxTxPrice uint64 `protobuf:"varint,2,opt,name=max_tx_price,json=maxTxPrice,proto3" json:"max_tx_price,omitempty"`
}

func (x *ReplaceByFeeReq) Reset() {
	*x = ReplaceByFeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_goat_v1_goat_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplaceByFeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplaceByFeeReq) ProtoMessage() {}

// Deprecated: Use ReplaceByFeeReq.ProtoReflect.Descriptor instead.
func (*ReplaceByFeeReq) Descriptor() ([]byte, []int) {
	return file_goat_goat_v1_goat_proto_rawDescGZIP(), []int{5}
}

func (x *ReplaceByFeeReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReplaceByFeeReq) GetMaxTxPrice() uint64 {
	if x != nil {
		return x.MaxTxPrice
	}
	return 0
}

// Cancel1Req
type Cancel1Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Cancel1Req) Reset() {
	*x = Cancel1Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goat_goat_v1_goat_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cancel1Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cancel1Req) ProtoMessage() {}

// Deprecated: Use Cancel1Req.ProtoReflect.Descriptor instead.
func (*Cancel1Req) Descriptor() ([]byte, []int) {
	return file_goat_goat_v1_goat_proto_rawDescGZIP(), []int{6}
}

func (x *Cancel1Req) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_goat_goat_v1_goat_proto protoreflect.FileDescriptor

var file_goat_goat_v1_goat_proto_rawDesc = []byte{
	0x0a, 0x17, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x6f, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x67, 0x6f, 0x61, 0x74, 0x2e,
	0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61,
	0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x07, 0x0a, 0x10,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f,
	0x67, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x72, 0x65, 0x76, 0x52, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61,
	0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61,
	0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x27, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x61,
	0x73, 0x65, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x47, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x52, 0x6f, 0x6f, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x6c,
	0x6f, 0x62, 0x5f, 0x67, 0x61, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x78,
	0x63, 0x65, 0x73, 0x73, 0x42, 0x6c, 0x6f, 0x62, 0x47, 0x61, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x67,
	0x61, 0x73, 0x5f, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x61, 0x73, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x67,
	0x61, 0x73, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x61, 0x64, 0x64,
	0x5f, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x64, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x0b, 0x61, 0x64, 0x64,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x6d, 0x5f, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x0a, 0x72, 0x6d,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x0e, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x52, 0x0d, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x07,
	0x72, 0x62, 0x66, 0x5f, 0x72, 0x65, 0x71, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x67, 0x6f, 0x61, 0x74, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x52, 0x06, 0x72, 0x62,
	0x66, 0x52, 0x65, 0x71, 0x12, 0x39, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x31, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x61, 0x74,
	0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x31,
	0x52, 0x65, 0x71, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x31, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x59, 0x0a, 0x0d, 0x47,
	0x61, 0x73, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x48, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde,
	0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e,
	0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x56, 0x6f, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x75, 0x62, 0x6b, 0x65, 0x79, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x48, 0x61, 0x73, 0x68, 0x22, 0x26, 0x0a, 0x0e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x6f, 0x74, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x54, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x43, 0x0a, 0x0f, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x42, 0x79, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x6d, 0x61, 0x78, 0x5f, 0x74, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x54, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x1c,
	0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x31, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x42, 0xa4, 0x01, 0x0a,
	0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x67, 0x6f, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x42, 0x09, 0x47, 0x6f, 0x61, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x6f, 0x61, 0x74, 0x2f, 0x67, 0x6f, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x67, 0x6f, 0x61,
	0x74, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x47, 0x58, 0xaa, 0x02, 0x0c, 0x47, 0x6f, 0x61, 0x74,
	0x2e, 0x47, 0x6f, 0x61, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0c, 0x47, 0x6f, 0x61, 0x74, 0x5c,
	0x47, 0x6f, 0x61, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x18, 0x47, 0x6f, 0x61, 0x74, 0x5c, 0x47,
	0x6f, 0x61, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x0e, 0x47, 0x6f, 0x61, 0x74, 0x3a, 0x3a, 0x47, 0x6f, 0x61, 0x74, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goat_goat_v1_goat_proto_rawDescOnce sync.Once
	file_goat_goat_v1_goat_proto_rawDescData = file_goat_goat_v1_goat_proto_rawDesc
)

func file_goat_goat_v1_goat_proto_rawDescGZIP() []byte {
	file_goat_goat_v1_goat_proto_rawDescOnce.Do(func() {
		file_goat_goat_v1_goat_proto_rawDescData = protoimpl.X.CompressGZIP(file_goat_goat_v1_goat_proto_rawDescData)
	})
	return file_goat_goat_v1_goat_proto_rawDescData
}

var file_goat_goat_v1_goat_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_goat_goat_v1_goat_proto_goTypes = []interface{}{
	(*ExecutionPayload)(nil), // 0: goat.goat.v1.ExecutionPayload
	(*GasRevenueReq)(nil),    // 1: goat.goat.v1.GasRevenueReq
	(*AddVoterReq)(nil),      // 2: goat.goat.v1.AddVoterReq
	(*RemoveVoterReq)(nil),   // 3: goat.goat.v1.RemoveVoterReq
	(*WithdrawalReq)(nil),    // 4: goat.goat.v1.WithdrawalReq
	(*ReplaceByFeeReq)(nil),  // 5: goat.goat.v1.ReplaceByFeeReq
	(*Cancel1Req)(nil),       // 6: goat.goat.v1.Cancel1Req
}
var file_goat_goat_v1_goat_proto_depIdxs = []int32{
	1, // 0: goat.goat.v1.ExecutionPayload.gas_revenue:type_name -> goat.goat.v1.GasRevenueReq
	2, // 1: goat.goat.v1.ExecutionPayload.add_voter_req:type_name -> goat.goat.v1.AddVoterReq
	3, // 2: goat.goat.v1.ExecutionPayload.rm_voter_req:type_name -> goat.goat.v1.RemoveVoterReq
	4, // 3: goat.goat.v1.ExecutionPayload.withdrawal_req:type_name -> goat.goat.v1.WithdrawalReq
	5, // 4: goat.goat.v1.ExecutionPayload.rbf_req:type_name -> goat.goat.v1.ReplaceByFeeReq
	6, // 5: goat.goat.v1.ExecutionPayload.cancel1_req:type_name -> goat.goat.v1.Cancel1Req
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_goat_goat_v1_goat_proto_init() }
func file_goat_goat_v1_goat_proto_init() {
	if File_goat_goat_v1_goat_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_goat_goat_v1_goat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_goat_v1_goat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasRevenueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_goat_v1_goat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVoterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_goat_v1_goat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveVoterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_goat_v1_goat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawalReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_goat_v1_goat_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplaceByFeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goat_goat_v1_goat_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cancel1Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goat_goat_v1_goat_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_goat_goat_v1_goat_proto_goTypes,
		DependencyIndexes: file_goat_goat_v1_goat_proto_depIdxs,
		MessageInfos:      file_goat_goat_v1_goat_proto_msgTypes,
	}.Build()
	File_goat_goat_v1_goat_proto = out.File
	file_goat_goat_v1_goat_proto_rawDesc = nil
	file_goat_goat_v1_goat_proto_goTypes = nil
	file_goat_goat_v1_goat_proto_depIdxs = nil
}
