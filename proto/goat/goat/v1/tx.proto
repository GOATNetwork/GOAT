syntax = "proto3";
package goat.goat.v1;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "goat/goat/v1/goat.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/goatnetwork/goat/x/goat/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // NewEthBlock
  rpc NewEthBlock(MsgNewEthBlock) returns (MsgNewEthBlockResponse);
}

// MsgNewEthBlock is the Msg/NewEthBlock request type.
message MsgNewEthBlock {
  option (cosmos.msg.v1.signer) = "proposer";
  option (amino.name) = "goat/x/goat/MsgNewEthBlock";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string proposer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  ExecutionPayload payload = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgNewEthBlockResponse is the Msg/NewEthBlock response type.
message MsgNewEthBlockResponse {}
